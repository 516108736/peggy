package ethbridge

// nolint
// autogenerated code using github.com/rigelrozanski/multitool
// aliases generated for the following subdirectories:
// ALIASGEN: github.com/cosmos/peggy/x/nftbridge/querier
// ALIASGEN: github.com/cosmos/peggy/x/nftbridge/types

import (
	ethbridge "github.com/cosmos/peggy/x/ethbridge/types"
	"github.com/cosmos/peggy/x/nftbridge/keeper"
	"github.com/cosmos/peggy/x/nftbridge/types"
)

const (
	QueryEthProphecy = types.QueryEthProphecy
	ModuleName       = types.ModuleName
	StoreKey         = types.StoreKey
	QuerierRoute     = types.QuerierRoute
	RouterKey        = types.RouterKey
)

var (
	// functions aliases
	NewKeeper                         = keeper.NewKeeper
	NewQuerier                        = keeper.NewQuerier
	NewNFTBridgeClaim                 = types.NewNFTBridgeClaim
	NewOracleClaimContent             = ethbridge.NewOracleClaimContent
	CreateOracleClaimFromNFTClaim     = types.CreateOracleClaimFromNFTClaim
	CreateNFTClaimFromOracleString    = types.CreateNFTClaimFromOracleString
	CreateOracleClaimFromOracleString = ethbridge.CreateOracleClaimFromOracleString
	RegisterCodec                     = types.RegisterCodec
	ErrInvalidEthNonce                = types.ErrInvalidEthNonce
	ErrInvalidEthAddress              = types.ErrInvalidEthAddress
	ErrJSONMarshalling                = types.ErrJSONMarshalling
	NewEthereumAddress                = ethbridge.NewEthereumAddress
	NewMsgCreateNFTBridgeClaim        = types.NewMsgCreateNFTBridgeClaim
	MapOracleClaimsToNFTBridgeClaims  = types.MapOracleClaimsToNFTBridgeClaims
	NewQueryNFTProphecyParams         = types.NewQueryNFTProphecyParams
	NewQueryNFTProphecyResponse       = types.NewQueryNFTProphecyResponse

	CreateTestNFTMsg                   = types.CreateTestNFTMsg
	CreateTestNFTClaim                 = types.CreateTestNFTClaim
	CreateTestQueryNFTProphecyResponse = types.CreateTestQueryNFTProphecyResponse
)

type (
	Keeper                   = keeper.Keeper
	NFTBridgeClaim           = types.NFTBridgeClaim
	OracleClaimContent       = types.OracleClaimContent
	EthereumAddress          = ethbridge.EthereumAddress
	MsgCreateNFTBridgeClaim  = types.MsgCreateNFTBridgeClaim
	MsgBurnNFT               = types.MsgBurnNFT
	MsgLockNFT               = types.MsgLockNFT
	QueryEthProphecyParams   = types.QueryEthProphecyParams
	QueryEthProphecyResponse = types.QueryEthProphecyResponse
)
