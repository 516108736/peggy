// This file is an automatically generated Go binding. Do not modify as any
// change will likely be lost upon the next re-generation!

package contracts

import (
	"math/big"
	"strings"

	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
)

// ETGateABI is the input ABI used to generate the binding from.
const ETGateABI = "[{\"constant\":false,\"inputs\":[{\"name\":\"iavlProofLeafHash\",\"type\":\"bytes20\"},{\"name\":\"iavlProofInnerHeight\",\"type\":\"int8[]\"},{\"name\":\"iavlProofInnerSize\",\"type\":\"int256[]\"},{\"name\":\"iavlProofInnerLeft\",\"type\":\"bytes20[]\"},{\"name\":\"iavlProofInnerRight\",\"type\":\"bytes20[]\"},{\"name\":\"iavlProofRootHash\",\"type\":\"bytes20\"},{\"name\":\"key\",\"type\":\"bytes\"},{\"name\":\"value\",\"type\":\"bytes\"},{\"name\":\"root\",\"type\":\"bytes20\"}],\"name\":\"verifyRaw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"chain\",\"type\":\"bytes\"},{\"name\":\"seq\",\"type\":\"bytes\"}],\"name\":\"toKey\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"height\",\"type\":\"uint256\"},{\"name\":\"chain\",\"type\":\"bytes\"},{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"withdrawable\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"bytes\"},{\"name\":\"value\",\"type\":\"uint64\"},{\"name\":\"chain\",\"type\":\"bytes\"}],\"name\":\"depositEther\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"chainState\",\"outputs\":[{\"name\":\"chainID\",\"type\":\"bytes\"},{\"name\":\"lastBlockHeight\",\"type\":\"uint256\"},{\"name\":\"totalVotingPower\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"bytes\"},{\"name\":\"value\",\"type\":\"uint64\"},{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"chain\",\"type\":\"bytes\"}],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"address\"}],\"name\":\"toBytes\",\"outputs\":[{\"name\":\"b\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_chainID\",\"type\":\"string\"},{\"name\":\"_height\",\"type\":\"uint256\"},{\"name\":\"_time\",\"type\":\"uint256\"},{\"name\":\"_numTxs\",\"type\":\"uint256\"},{\"name\":\"_blockIDHash\",\"type\":\"bytes20\"},{\"name\":\"_blockIDPartSetHeaderTotal\",\"type\":\"uint256\"},{\"name\":\"_blockIDPartSetHEaderHash\",\"type\":\"bytes20\"},{\"name\":\"_lastCommitHash\",\"type\":\"bytes20\"},{\"name\":\"_dataHash\",\"type\":\"bytes20\"},{\"name\":\"_validatorHash\",\"type\":\"bytes20\"},{\"name\":\"_appHash\",\"type\":\"bytes20\"}],\"name\":\"update\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"i\",\"type\":\"uint64\"}],\"name\":\"writeUvarint\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint64\"},{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"toVal\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"height\",\"type\":\"uint256\"},{\"name\":\"iavlProofLeafHash\",\"type\":\"bytes20\"},{\"name\":\"iavlProofInnerHeight\",\"type\":\"int8[]\"},{\"name\":\"iavlProofInnerSize\",\"type\":\"int256[]\"},{\"name\":\"iavlProofInnerLeft\",\"type\":\"bytes20[]\"},{\"name\":\"iavlProofInnerRight\",\"type\":\"bytes20[]\"},{\"name\":\"iavlProofRootHash\",\"type\":\"bytes20\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint64\"},{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"chain\",\"type\":\"bytes\"},{\"name\":\"seq\",\"type\":\"bytes\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_chainID\",\"type\":\"bytes\"},{\"name\":\"_pubkey\",\"type\":\"bytes\"},{\"name\":\"_votingPower\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"to\",\"type\":\"bytes\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint64\"},{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"chain\",\"type\":\"bytes\"},{\"indexed\":false,\"name\":\"seq\",\"type\":\"uint64\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint64\"},{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"chain\",\"type\":\"bytes\"}],\"name\":\"Withdraw\",\"type\":\"event\"}]"

// ETGateBin is the compiled bytecode used for deploying new contracts.
const ETGateBin = `6060604052603260045534156200001557600080fd5b6040516200400c3803806200400c833981016040528080518201919060200180518201919060200180518201919050505b60008060006200005562000721565b6000604186510287511415156200006b57600080fd5b60009350600092505b8551831015620002ab5760416040518059106200008e5750595b908082528060200260200182016040525b509150600090505b60418110156200015e5786816041850201815181101515620000c557fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000282828151811015156200011f57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505b8080600101915050620000a7565b84805480600101828162000173919062000735565b916000526020600020906005020160005b620001bc858a888151811015156200019857fe5b90602001906020020151620003026401000000000262002f7e176401000000009004565b909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff02191690836c01000000000000000000000000900402179055506040820151816002019080519060200190620002679291906200076a565b50606082015181600301556080820151816004015550505085838151811015156200028e57fe5b90602001906020020151840193505b828060010193505062000074565b8760056000019080519060200190620002c6929190620007f1565b50846005600101908054620002dd92919062000878565b506000600560020181905550836005600301819055505b505050505050505062000bd9565b6200030c620009d4565b60006200031862000721565b60008073ffffffffffffffffffffffffffffffffffffffff876040518082805190602001908083835b6020831015156200036957805182525b60208201915060208101905060208303925062000341565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600190041693506021604051805910620003ad5750595b908082528060200260200182016040525b50925060006002886040815181101515620003d557fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900460ff168115156200045057fe5b0660ff161415620004c55760027f0100000000000000000000000000000000000000000000000000000000000000028360008151811015156200048f57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506200052a565b60037f010000000000000000000000000000000000000000000000000000000000000002836000815181101515620004f957fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505b600191505b6021821015620005e15786828151811015156200054857fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028383815181101515620005a257fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505b81806001019250506200052f565b60036002846000604051602001526040518082805190602001908083835b6020831015156200062757805182525b602082019150602081019050602083039250620005ff565b6001836020036101000a03801982511681845116808217855250505050505090500191505060206040518083038160008661646e5a03f115156200066a57600080fd5b50506040518051905060006040516020015260405180826000191660001916815260200191505060206040518083038160008661646e5a03f11515620006af57600080fd5b5050604051516c0100000000000000000000000002905060a0604051908101604052808573ffffffffffffffffffffffffffffffffffffffff168152602001826bffffffffffffffffffffffff19168152602001888152602001878152602001600081525094505b5050505092915050565b602060405190810160405280600081525090565b815481835581811511620007655760050281600502836000526020600020918201910162000764919062000a31565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620007ad57805160ff1916838001178555620007de565b82800160010185558215620007de579182015b82811115620007dd578251825591602001919060010190620007c0565b5b509050620007ed919062000ac3565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200083457805160ff191683800117855562000865565b8280016001018555821562000865579182015b828111156200086457825182559160200191906001019062000847565b5b50905062000874919062000ac3565b5090565b828054828255906000526020600020906005028101928215620009c15760005260206000209160050282015b82811115620009c05782826000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001820160009054906101000a90046c01000000000000000000000000028160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff02191690836c0100000000000000000000000090040217905550600282018160020190805460018160011615610100020316600290046200099992919062000aeb565b506003820154816003015560048201548160040155505091600501919060050190620008a4565b5b509050620009d0919062000a31565b5090565b60a060405190810160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160006bffffffffffffffffffffffff1916815260200162000a1d62000b79565b815260200160008152602001600081525090565b62000ac091905b8082111562000abc57600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600062000aa2919062000b8d565b600382016000905560048201600090555060050162000a38565b5090565b90565b62000ae891905b8082111562000ae457600081600090555060010162000aca565b5090565b90565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1062000b26578054855562000b66565b8280016001018555821562000b6657600052602060002091601f016020900482015b8281111562000b6557825482559160010191906001019062000b48565b5b50905062000b75919062000ac3565b5090565b602060405190810160405280600081525090565b50805460018160011615610100020316600290046000825580601f1062000bb5575062000bd6565b601f01602090049060005260206000209081019062000bd5919062000ac3565b5b50565b6134238062000be96000396000f300606060405236156100ad576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806301bfd99c146100b25780630c44ec811461029a5780631aa5938d146103b45780631f587c74146104645780634535e1c01461050c5780635300020a146105c5578063593b79fe1461068c578063597100411461073f578063d852de9a14610850578063e2c229ea146108f7578063fc8488c9146109dc575b600080fd5b34156100bd57600080fd5b61029860048080356bffffffffffffffffffffffffbffffffffffffffffffffffff191690602001909190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919080356bffffffffffffffffffffffff1916906020019091905050610c06565b005b34156102a557600080fd5b610338600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610c3f565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103795780820151818401525b60208101905061035d565b50505050905090810190601f1680156103a65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156103bf57600080fd5b61044a600480803590602001909190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803567ffffffffffffffff16906020019091905050610f52565b604051808215151515815260200191505060405180910390f35b61050a600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803567ffffffffffffffff1690602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050611057565b005b341561051757600080fd5b61051f61106a565b60405180806020018481526020018381526020018281038252858181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156105b45780601f10610589576101008083540402835291602001916105b4565b820191906000526020600020905b81548152906001019060200180831161059757829003601f168201915b505094505050505060405180910390f35b61068a600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803567ffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050611081565b005b341561069757600080fd5b6106c3600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061144b565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107045780820151818401525b6020810190506106e8565b50505050905090810190601f1680156107315780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561074a57600080fd5b61084e600480803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919080359060200190919080359060200190919080359060200190919080356bffffffffffffffffffffffff19169060200190919080359060200190919080356bffffffffffffffffffffffff19169060200190919080356bffffffffffffffffffffffff19169060200190919080356bffffffffffffffffffffffff19169060200190919080356bffffffffffffffffffffffff19169060200190919080356bffffffffffffffffffffffff1916906020019091905050611484565b005b341561085b57600080fd5b61087b600480803567ffffffffffffffff16906020019091905050611639565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156108bc5780820151818401525b6020810190506108a0565b50505050905090810190601f1680156108e95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561090257600080fd5b610960600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803567ffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611793565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156109a15780820151818401525b602081019050610985565b50505050905090810190601f1680156109ce5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156109e757600080fd5b610c0460048080359060200190919080356bffffffffffffffffffffffffbffffffffffffffffffffffff191690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803567ffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050611bea565b005b610c0e612e0e565b610c1c8a8a8a8a8a8a611e9d565b9050610c2a81858585612042565b1515610c3257fe5b5b50505050505050505050565b610c47612e54565b610c4f612e54565b610c57612e54565b60006040805190810160405280601081526020017f6574676174652c77697468647261772c0000000000000000000000000000000081525092508451600187518551010101604051805910610ca95750595b908082528060200260200182016040525b509150600090505b8251811015610d70578281815181101515610cd957fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028282815181101515610d3257fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505b8080600101915050610cc2565b600090505b8551811015610e26578581815181101515610d8c57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028282855101815181101515610de857fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505b8080600101915050610d75565b7f2c00000000000000000000000000000000000000000000000000000000000000828751855101815181101515610e5957fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600090505b8451811015610f45578481815181101515610ea557fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028282600189518751010101815181101515610f0757fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505b8080600101915050610e8e565b8193505b50505092915050565b600080600160008781526020019081526020016000205414158015610f8d575060045443036001600087815260200190815260200160002054105b801561104c57508167ffffffffffffffff166003856040518082805190602001908083835b602083101515610fd857805182525b602082019150602081019050602083039250610fb2565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b90505b949350505050565b6110648383600084611081565b5b505050565b600580600001908060020154908060030154905083565b60008273ffffffffffffffffffffffffffffffffffffffff1614156110ba57348367ffffffffffffffff161415156110b557fe5b6111c7565b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866000604051602001526040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018267ffffffffffffffff1681526020019350505050602060405180830381600087803b15156111a357600080fd5b6102c65a03f115156111b457600080fd5b5050506040518051905015156111c657fe5b5b8267ffffffffffffffff166003826040518082805190602001908083835b60208310151561120b57805182525b6020820191506020810190506020830392506111e5565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055507f6a6348818f38d83adad1a213a431c45e300a15d499fc213a86a80916f47bf200848484846014600081819054906101000a900467ffffffffffffffff168092919060010191906101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060405180806020018667ffffffffffffffff1667ffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018467ffffffffffffffff1667ffffffffffffffff168152602001838103835288818151815260200191508051906020019080838360005b8381101561139e5780820151818401525b602081019050611382565b50505050905090810190601f1680156113cb5780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b838110156114055780820151818401525b6020810190506113e9565b50505050905090810190601f1680156114325780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390a15b50505050565b611453612e54565b604051827414000000000000000000000000000000000000000018601482015260348101604052809150505b919050565b60008090505b600560010180549050811015611528576005600101818154811015156114ac57fe5b906000526020600020906005020160005b5060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561151a57611528565b5b808060010191505061148a565b600560010180549050811415151561153c57fe5b6000600160008d81526020019081526020016000205414151561155e57600080fd5b611629610120604051908101604052808e81526020018d81526020018c81526020018b815260200160408051908101604052808c6bffffffffffffffffffffffff1916815260200160408051908101604052808d81526020018c6bffffffffffffffffffffffff19168152508152508152602001876bffffffffffffffffffffffff19168152602001866bffffffffffffffffffffffff19168152602001856bffffffffffffffffffffffff19168152602001846bffffffffffffffffffffffff19168152506121e7565b5b5b505050505050505050505050565b611641612e54565b600061164b612e54565b600061165685612403565b92506001830160ff1660405180591061166c5750595b908082528060200260200182016040525b509150827f0100000000000000000000000000000000000000000000000000000000000000028260008151811015156116b257fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600090505b8260ff1681101561178757806001840360ff160360080260020a8567ffffffffffffffff1681151561171557fe5b047f010000000000000000000000000000000000000000000000000000000000000002826001830181518110151561174957fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505b80806001019150506116e7565b8193505b505050919050565b61179b612e54565b6117a3612e54565b6117ab612e54565b6117b3612e54565b6117bb612e54565b6117c3612e54565b6117cb612e54565b6000806117d78c61144b565b97506117e38851611639565b96506117ee8b611639565b95506117f98a61144b565b94506118058551611639565b93508451845187518a518a51010101016040518059106118225750595b908082528060200260200182016040525b50925060009150600090505b86518110156118f357868181518110151561185657fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811015156118b557fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505b808060010191505061183f565b600090505b87518110156119ac57878181518110151561190f57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561196e57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505b80806001019150506118f8565b600090505b8551811015611a655785818151811015156119c857fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028383806001019450815181101515611a2757fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505b80806001019150506119b1565b600090505b8351811015611b1e578381815181101515611a8157fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028383806001019450815181101515611ae057fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505b8080600101915050611a6a565b600090505b8451811015611bd7578481815181101515611b3a57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028383806001019450815181101515611b9957fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505b8080600101915050611b23565b8298505b50505050505050509392505050565b611bf2612e0e565b611bfe8d848688610f52565b1515611c0957600080fd5b611c178c8c8c8c8c8c611e9d565b9050611c28818e888888888861250a565b60008473ffffffffffffffffffffffffffffffffffffffff161415611c93578573ffffffffffffffffffffffffffffffffffffffff166108fc8667ffffffffffffffff169081150290604051600060405180830381858888f193505050501515611c8e57fe5b611d6c565b8373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb87876000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018267ffffffffffffffff16815260200192505050602060405180830381600087803b1515611d4857600080fd5b6102c65a03f11515611d5957600080fd5b505050604051805190501515611d6b57fe5b5b7f88bd5555909f63a46f58e293f34fc4c2d7796f94a183485973ca32856e6c147d86868686604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018467ffffffffffffffff1667ffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611e505780820151818401525b602081019050611e34565b50505050905090810190601f168015611e7d5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a15b50505050505050505050505050565b611ea5612e0e565b6000611eaf612e68565b600088519250875183148015611ec55750865183145b8015611ed15750855183145b1515611edc57600080fd5b82604051805910611eea5750595b908082528060200260200182016040528015611f2057816020015b611f0d612e7c565b815260200190600190039081611f055790505b509150600090505b82811015611ff8576080604051908101604052808a83815181101515611f4a57fe5b9060200190602002015160000b81526020018983815181101515611f6a57fe5b9060200190602002015181526020018883815181101515611f8757fe5b906020019060200201516bffffffffffffffffffffffff191681526020018783815181101515611fb357fe5b906020019060200201516bffffffffffffffffffffffff19168152508282815181101515611fdd57fe5b906020019060200201819052505b8080600101915050611f28565b6060604051908101604052808b6bffffffffffffffffffffffff19168152602001838152602001866bffffffffffffffffffffffff191681525093505b5050509695505050505050565b60008060008360405180826bffffffffffffffffffffffff19166bffffffffffffffffffffffff19168152601401915050604051809103902060001916876040015160405180826bffffffffffffffffffffffff19166bffffffffffffffffffffffff191681526014019150506040518091039020600019161415156120cb57600092506121dd565b6120e860408051908101604052808881526020018781525061267d565b9150866000015160405180826bffffffffffffffffffffffff19166bffffffffffffffffffffffff191681526014019150506040518091039020600019168260405180826bffffffffffffffffffffffff19166bffffffffffffffffffffffff1916815260140191505060405180910390206000191614151561216e57600092506121dd565b600090505b8660200151518110156121b5576121a587602001518281518110151561219557fe5b9060200190602002015183612989565b91505b8080600101915050612173565b816bffffffffffffffffffffffff191687604001516bffffffffffffffffffffffff19161492505b5050949350505050565b8060008083602001518152602001908152602001600020600082015181600001908051906020019061221a929190612ec5565b5060208201518160010155604082015181600201556060820151816003015560808201518160040160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff02191690836c01000000000000000000000000900402179055506020820151816001016000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff02191690836c01000000000000000000000000900402179055505050505060a08201518160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff02191690836c010000000000000000000000009004021790555060c08201518160080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff02191690836c010000000000000000000000009004021790555060e08201518160090160006101000a81548173ffffffffffffffffffffffffffffffffffffffff02191690836c010000000000000000000000009004021790555061010082015181600a0160006101000a81548173ffffffffffffffffffffffffffffffffffffffff02191690836c0100000000000000000000000090040217905550905050436001600083602001518152602001908152602001600020819055505b50565b6000808267ffffffffffffffff1614156124205760009050612505565b6101008267ffffffffffffffff16101561243d5760019050612505565b620100008267ffffffffffffffff16101561245b5760029050612505565b63010000008267ffffffffffffffff16101561247a5760039050612505565b6401000000008267ffffffffffffffff16101561249a5760049050612505565b650100000000008267ffffffffffffffff1610156124bb5760059050612505565b66010000000000008267ffffffffffffffff1610156124dd5760069050612505565b6701000000000000008267ffffffffffffffff1610156125005760079050612505565b600890505b919050565b612512612e54565b61251c8383610c3f565b90506002816040518082805190602001908083835b60208310151561255757805182525b602082019150602081019050602083039250612531565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060009054906101000a900460ff161515156125a157fe5b60016002826040518082805190602001908083835b6020831015156125dc57805182525b6020820191506020810190506020830392506125b6565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060006101000a81548160ff02191690831515021790555061266a8882612636898989611793565b6000808c8152602001908152602001600020600a0160009054906101000a90046c0100000000000000000000000002612042565b151561267257fe5b5b5050505050505050565b6000600360007f01000000000000000000000000000000000000000000000000000000000000000260017f01000000000000000000000000000000000000000000000000000000000000000260017f0100000000000000000000000000000000000000000000000000000000000000026126f76014611639565b86600001516127066014611639565b886020015160006040516020015260405180887effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152600101877effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152600101867effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260010185805190602001908083835b60208310151561282857805182525b602082019150602081019050602083039250612802565b6001836020036101000a03801982511681845116808217855250505050505090500184805190602001908083835b60208310151561287c57805182525b602082019150602081019050602083039250612856565b6001836020036101000a03801982511681845116808217855250505050505090500183805190602001908083835b6020831015156128d057805182525b6020820191506020810190506020830392506128aa565b6001836020036101000a03801982511681845116808217855250505050505090500182805190602001908083835b60208310151561292457805182525b6020820191506020810190506020830392506128fe565b6001836020036101000a03801982511681845116808217855250505050505090500197505050505050505060206040518083038160008661646e5a03f1151561296c57600080fd5b5050604051516c010000000000000000000000000290505b919050565b600080836040015150601460ff161415612bd257600383600001517f0100000000000000000000000000000000000000000000000000000000000000026129d38560200151611639565b6129dd6014611639565b856129f1886060015150601460ff16611639565b886060015160006040516020015260405180877effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260010186805190602001908083835b602083101515612a7f57805182525b602082019150602081019050602083039250612a59565b6001836020036101000a03801982511681845116808217855250505050505090500185805190602001908083835b602083101515612ad357805182525b602082019150602081019050602083039250612aad565b6001836020036101000a038019825116818451168082178552505050505050905001846bffffffffffffffffffffffff19166bffffffffffffffffffffffff1916815260140183805190602001908083835b602083101515612b4b57805182525b602082019150602081019050602083039250612b25565b6001836020036101000a038019825116818451168082178552505050505050905001826bffffffffffffffffffffffff19166bffffffffffffffffffffffff19168152601401965050505050505060206040518083038160008661646e5a03f11515612bb657600080fd5b5050604051516c01000000000000000000000000029050612e08565b600383600001517f010000000000000000000000000000000000000000000000000000000000000002612c088560200151611639565b612c1b866040015150601460ff16611639565b8660400151612c2a6014611639565b8760006040516020015260405180877effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260010186805190602001908083835b602083101515612cb457805182525b602082019150602081019050602083039250612c8e565b6001836020036101000a03801982511681845116808217855250505050505090500185805190602001908083835b602083101515612d0857805182525b602082019150602081019050602083039250612ce2565b6001836020036101000a038019825116818451168082178552505050505050905001846bffffffffffffffffffffffff19166bffffffffffffffffffffffff1916815260140183805190602001908083835b602083101515612d8057805182525b602082019150602081019050602083039250612d5a565b6001836020036101000a038019825116818451168082178552505050505050905001826bffffffffffffffffffffffff19166bffffffffffffffffffffffff19168152601401965050505050505060206040518083038160008661646e5a03f11515612deb57600080fd5b5050604051516c01000000000000000000000000029050612e08565b5b92915050565b60606040519081016040528060006bffffffffffffffffffffffff19168152602001612e38612f45565b815260200160006bffffffffffffffffffffffff191681525090565b602060405190810160405280600081525090565b602060405190810160405280600081525090565b6080604051908101604052806000800b81526020016000815260200160006bffffffffffffffffffffffff1916815260200160006bffffffffffffffffffffffff191681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612f0657805160ff1916838001178555612f34565b82800160010185558215612f34579182015b82811115612f33578251825591602001919060010190612f18565b5b509050612f419190612f59565b5090565b602060405190810160405280600081525090565b612f7b91905b80821115612f77576000816000905550600101612f5f565b5090565b90565b612f86613388565b6000612f90612e54565b60008073ffffffffffffffffffffffffffffffffffffffff876040518082805190602001908083835b602083101515612fdf57805182525b602082019150602081019050602083039250612fb9565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206001900416935060216040518059106130225750595b908082528060200260200182016040525b5092506000600288604081518110151561304957fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900460ff168115156130c357fe5b0660ff1614156131355760027f01000000000000000000000000000000000000000000000000000000000000000283600081518110151561310057fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350613199565b60037f01000000000000000000000000000000000000000000000000000000000000000283600081518110151561316857fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505b600191505b602182101561324c5786828151811015156131b557fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838381518110151561320e57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505b818060010192505061319e565b60036002846000604051602001526040518082805190602001908083835b60208310151561329057805182525b60208201915060208101905060208303925061326a565b6001836020036101000a03801982511681845116808217855250505050505090500191505060206040518083038160008661646e5a03f115156132d257600080fd5b50506040518051905060006040516020015260405180826000191660001916815260200191505060206040518083038160008661646e5a03f1151561331657600080fd5b5050604051516c0100000000000000000000000002905060a0604051908101604052808573ffffffffffffffffffffffffffffffffffffffff168152602001826bffffffffffffffffffffffff19168152602001888152602001878152602001600081525094505b5050505092915050565b60a060405190810160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160006bffffffffffffffffffffffff191681526020016133cf6133e3565b815260200160008152602001600081525090565b6020604051908101604052806000815250905600a165627a7a72305820996a949345eec093a280b7f7de2e30baf01749a3e21cea22f59bb70e1cc39c0a0029`

// DeployETGate deploys a new Ethereum contract, binding an instance of ETGate to it.
func DeployETGate(auth *bind.TransactOpts, backend bind.ContractBackend, _chainID []byte, _pubkey []byte, _votingPower []*big.Int) (common.Address, *types.Transaction, *ETGate, error) {
	parsed, err := abi.JSON(strings.NewReader(ETGateABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(ETGateBin), backend, _chainID, _pubkey, _votingPower)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &ETGate{ETGateCaller: ETGateCaller{contract: contract}, ETGateTransactor: ETGateTransactor{contract: contract}}, nil
}

// ETGate is an auto generated Go binding around an Ethereum contract.
type ETGate struct {
	ETGateCaller     // Read-only binding to the contract
	ETGateTransactor // Write-only binding to the contract
}

// ETGateCaller is an auto generated read-only Go binding around an Ethereum contract.
type ETGateCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ETGateTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ETGateTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ETGateSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ETGateSession struct {
	Contract     *ETGate           // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ETGateCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ETGateCallerSession struct {
	Contract *ETGateCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// ETGateTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ETGateTransactorSession struct {
	Contract     *ETGateTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ETGateRaw is an auto generated low-level Go binding around an Ethereum contract.
type ETGateRaw struct {
	Contract *ETGate // Generic contract binding to access the raw methods on
}

// ETGateCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ETGateCallerRaw struct {
	Contract *ETGateCaller // Generic read-only contract binding to access the raw methods on
}

// ETGateTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ETGateTransactorRaw struct {
	Contract *ETGateTransactor // Generic write-only contract binding to access the raw methods on
}

// NewETGate creates a new instance of ETGate, bound to a specific deployed contract.
func NewETGate(address common.Address, backend bind.ContractBackend) (*ETGate, error) {
	contract, err := bindETGate(address, backend, backend)
	if err != nil {
		return nil, err
	}
	return &ETGate{ETGateCaller: ETGateCaller{contract: contract}, ETGateTransactor: ETGateTransactor{contract: contract}}, nil
}

// NewETGateCaller creates a new read-only instance of ETGate, bound to a specific deployed contract.
func NewETGateCaller(address common.Address, caller bind.ContractCaller) (*ETGateCaller, error) {
	contract, err := bindETGate(address, caller, nil)
	if err != nil {
		return nil, err
	}
	return &ETGateCaller{contract: contract}, nil
}

// NewETGateTransactor creates a new write-only instance of ETGate, bound to a specific deployed contract.
func NewETGateTransactor(address common.Address, transactor bind.ContractTransactor) (*ETGateTransactor, error) {
	contract, err := bindETGate(address, nil, transactor)
	if err != nil {
		return nil, err
	}
	return &ETGateTransactor{contract: contract}, nil
}

// bindETGate binds a generic wrapper to an already deployed contract.
func bindETGate(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(ETGateABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ETGate *ETGateRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _ETGate.Contract.ETGateCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ETGate *ETGateRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ETGate.Contract.ETGateTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ETGate *ETGateRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ETGate.Contract.ETGateTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ETGate *ETGateCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _ETGate.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ETGate *ETGateTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ETGate.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ETGate *ETGateTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ETGate.Contract.contract.Transact(opts, method, params...)
}

// ChainState is a free data retrieval call binding the contract method 0x4535e1c0.
//
// Solidity: function chainState() constant returns(chainID bytes, lastBlockHeight uint256, totalVotingPower uint256)
func (_ETGate *ETGateCaller) ChainState(opts *bind.CallOpts) (struct {
	ChainID          []byte
	LastBlockHeight  *big.Int
	TotalVotingPower *big.Int
}, error) {
	ret := new(struct {
		ChainID          []byte
		LastBlockHeight  *big.Int
		TotalVotingPower *big.Int
	})
	out := ret
	err := _ETGate.contract.Call(opts, out, "chainState")
	return *ret, err
}

// ChainState is a free data retrieval call binding the contract method 0x4535e1c0.
//
// Solidity: function chainState() constant returns(chainID bytes, lastBlockHeight uint256, totalVotingPower uint256)
func (_ETGate *ETGateSession) ChainState() (struct {
	ChainID          []byte
	LastBlockHeight  *big.Int
	TotalVotingPower *big.Int
}, error) {
	return _ETGate.Contract.ChainState(&_ETGate.CallOpts)
}

// ChainState is a free data retrieval call binding the contract method 0x4535e1c0.
//
// Solidity: function chainState() constant returns(chainID bytes, lastBlockHeight uint256, totalVotingPower uint256)
func (_ETGate *ETGateCallerSession) ChainState() (struct {
	ChainID          []byte
	LastBlockHeight  *big.Int
	TotalVotingPower *big.Int
}, error) {
	return _ETGate.Contract.ChainState(&_ETGate.CallOpts)
}

// ToBytes is a free data retrieval call binding the contract method 0x593b79fe.
//
// Solidity: function toBytes(a address) constant returns(b bytes)
func (_ETGate *ETGateCaller) ToBytes(opts *bind.CallOpts, a common.Address) ([]byte, error) {
	var (
		ret0 = new([]byte)
	)
	out := ret0
	err := _ETGate.contract.Call(opts, out, "toBytes", a)
	return *ret0, err
}

// ToBytes is a free data retrieval call binding the contract method 0x593b79fe.
//
// Solidity: function toBytes(a address) constant returns(b bytes)
func (_ETGate *ETGateSession) ToBytes(a common.Address) ([]byte, error) {
	return _ETGate.Contract.ToBytes(&_ETGate.CallOpts, a)
}

// ToBytes is a free data retrieval call binding the contract method 0x593b79fe.
//
// Solidity: function toBytes(a address) constant returns(b bytes)
func (_ETGate *ETGateCallerSession) ToBytes(a common.Address) ([]byte, error) {
	return _ETGate.Contract.ToBytes(&_ETGate.CallOpts, a)
}

// ToKey is a free data retrieval call binding the contract method 0x0c44ec81.
//
// Solidity: function toKey(chain bytes, seq bytes) constant returns(bytes)
func (_ETGate *ETGateCaller) ToKey(opts *bind.CallOpts, chain []byte, seq []byte) ([]byte, error) {
	var (
		ret0 = new([]byte)
	)
	out := ret0
	err := _ETGate.contract.Call(opts, out, "toKey", chain, seq)
	return *ret0, err
}

// ToKey is a free data retrieval call binding the contract method 0x0c44ec81.
//
// Solidity: function toKey(chain bytes, seq bytes) constant returns(bytes)
func (_ETGate *ETGateSession) ToKey(chain []byte, seq []byte) ([]byte, error) {
	return _ETGate.Contract.ToKey(&_ETGate.CallOpts, chain, seq)
}

// ToKey is a free data retrieval call binding the contract method 0x0c44ec81.
//
// Solidity: function toKey(chain bytes, seq bytes) constant returns(bytes)
func (_ETGate *ETGateCallerSession) ToKey(chain []byte, seq []byte) ([]byte, error) {
	return _ETGate.Contract.ToKey(&_ETGate.CallOpts, chain, seq)
}

// Withdrawable is a free data retrieval call binding the contract method 0x1aa5938d.
//
// Solidity: function withdrawable(height uint256, chain bytes, token address, value uint64) constant returns(bool)
func (_ETGate *ETGateCaller) Withdrawable(opts *bind.CallOpts, height *big.Int, chain []byte, token common.Address, value uint64) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _ETGate.contract.Call(opts, out, "withdrawable", height, chain, token, value)
	return *ret0, err
}

// Withdrawable is a free data retrieval call binding the contract method 0x1aa5938d.
//
// Solidity: function withdrawable(height uint256, chain bytes, token address, value uint64) constant returns(bool)
func (_ETGate *ETGateSession) Withdrawable(height *big.Int, chain []byte, token common.Address, value uint64) (bool, error) {
	return _ETGate.Contract.Withdrawable(&_ETGate.CallOpts, height, chain, token, value)
}

// Withdrawable is a free data retrieval call binding the contract method 0x1aa5938d.
//
// Solidity: function withdrawable(height uint256, chain bytes, token address, value uint64) constant returns(bool)
func (_ETGate *ETGateCallerSession) Withdrawable(height *big.Int, chain []byte, token common.Address, value uint64) (bool, error) {
	return _ETGate.Contract.Withdrawable(&_ETGate.CallOpts, height, chain, token, value)
}

// Deposit is a paid mutator transaction binding the contract method 0x5300020a.
//
// Solidity: function deposit(to bytes, value uint64, token address, chain bytes) returns()
func (_ETGate *ETGateTransactor) Deposit(opts *bind.TransactOpts, to []byte, value uint64, token common.Address, chain []byte) (*types.Transaction, error) {
	return _ETGate.contract.Transact(opts, "deposit", to, value, token, chain)
}

// Deposit is a paid mutator transaction binding the contract method 0x5300020a.
//
// Solidity: function deposit(to bytes, value uint64, token address, chain bytes) returns()
func (_ETGate *ETGateSession) Deposit(to []byte, value uint64, token common.Address, chain []byte) (*types.Transaction, error) {
	return _ETGate.Contract.Deposit(&_ETGate.TransactOpts, to, value, token, chain)
}

// Deposit is a paid mutator transaction binding the contract method 0x5300020a.
//
// Solidity: function deposit(to bytes, value uint64, token address, chain bytes) returns()
func (_ETGate *ETGateTransactorSession) Deposit(to []byte, value uint64, token common.Address, chain []byte) (*types.Transaction, error) {
	return _ETGate.Contract.Deposit(&_ETGate.TransactOpts, to, value, token, chain)
}

// DepositEther is a paid mutator transaction binding the contract method 0x1f587c74.
//
// Solidity: function depositEther(to bytes, value uint64, chain bytes) returns()
func (_ETGate *ETGateTransactor) DepositEther(opts *bind.TransactOpts, to []byte, value uint64, chain []byte) (*types.Transaction, error) {
	return _ETGate.contract.Transact(opts, "depositEther", to, value, chain)
}

// DepositEther is a paid mutator transaction binding the contract method 0x1f587c74.
//
// Solidity: function depositEther(to bytes, value uint64, chain bytes) returns()
func (_ETGate *ETGateSession) DepositEther(to []byte, value uint64, chain []byte) (*types.Transaction, error) {
	return _ETGate.Contract.DepositEther(&_ETGate.TransactOpts, to, value, chain)
}

// DepositEther is a paid mutator transaction binding the contract method 0x1f587c74.
//
// Solidity: function depositEther(to bytes, value uint64, chain bytes) returns()
func (_ETGate *ETGateTransactorSession) DepositEther(to []byte, value uint64, chain []byte) (*types.Transaction, error) {
	return _ETGate.Contract.DepositEther(&_ETGate.TransactOpts, to, value, chain)
}

// ToVal is a paid mutator transaction binding the contract method 0xe2c229ea.
//
// Solidity: function toVal(to address, value uint64, token address) returns(bytes)
func (_ETGate *ETGateTransactor) ToVal(opts *bind.TransactOpts, to common.Address, value uint64, token common.Address) (*types.Transaction, error) {
	return _ETGate.contract.Transact(opts, "toVal", to, value, token)
}

// ToVal is a paid mutator transaction binding the contract method 0xe2c229ea.
//
// Solidity: function toVal(to address, value uint64, token address) returns(bytes)
func (_ETGate *ETGateSession) ToVal(to common.Address, value uint64, token common.Address) (*types.Transaction, error) {
	return _ETGate.Contract.ToVal(&_ETGate.TransactOpts, to, value, token)
}

// ToVal is a paid mutator transaction binding the contract method 0xe2c229ea.
//
// Solidity: function toVal(to address, value uint64, token address) returns(bytes)
func (_ETGate *ETGateTransactorSession) ToVal(to common.Address, value uint64, token common.Address) (*types.Transaction, error) {
	return _ETGate.Contract.ToVal(&_ETGate.TransactOpts, to, value, token)
}

// Update is a paid mutator transaction binding the contract method 0x59710041.
//
// Solidity: function update(_chainID string, _height uint256, _time uint256, _numTxs uint256, _blockIDHash bytes20, _blockIDPartSetHeaderTotal uint256, _blockIDPartSetHEaderHash bytes20, _lastCommitHash bytes20, _dataHash bytes20, _validatorHash bytes20, _appHash bytes20) returns()
func (_ETGate *ETGateTransactor) Update(opts *bind.TransactOpts, _chainID string, _height *big.Int, _time *big.Int, _numTxs *big.Int, _blockIDHash [20]byte, _blockIDPartSetHeaderTotal *big.Int, _blockIDPartSetHEaderHash [20]byte, _lastCommitHash [20]byte, _dataHash [20]byte, _validatorHash [20]byte, _appHash [20]byte) (*types.Transaction, error) {
	return _ETGate.contract.Transact(opts, "update", _chainID, _height, _time, _numTxs, _blockIDHash, _blockIDPartSetHeaderTotal, _blockIDPartSetHEaderHash, _lastCommitHash, _dataHash, _validatorHash, _appHash)
}

// Update is a paid mutator transaction binding the contract method 0x59710041.
//
// Solidity: function update(_chainID string, _height uint256, _time uint256, _numTxs uint256, _blockIDHash bytes20, _blockIDPartSetHeaderTotal uint256, _blockIDPartSetHEaderHash bytes20, _lastCommitHash bytes20, _dataHash bytes20, _validatorHash bytes20, _appHash bytes20) returns()
func (_ETGate *ETGateSession) Update(_chainID string, _height *big.Int, _time *big.Int, _numTxs *big.Int, _blockIDHash [20]byte, _blockIDPartSetHeaderTotal *big.Int, _blockIDPartSetHEaderHash [20]byte, _lastCommitHash [20]byte, _dataHash [20]byte, _validatorHash [20]byte, _appHash [20]byte) (*types.Transaction, error) {
	return _ETGate.Contract.Update(&_ETGate.TransactOpts, _chainID, _height, _time, _numTxs, _blockIDHash, _blockIDPartSetHeaderTotal, _blockIDPartSetHEaderHash, _lastCommitHash, _dataHash, _validatorHash, _appHash)
}

// Update is a paid mutator transaction binding the contract method 0x59710041.
//
// Solidity: function update(_chainID string, _height uint256, _time uint256, _numTxs uint256, _blockIDHash bytes20, _blockIDPartSetHeaderTotal uint256, _blockIDPartSetHEaderHash bytes20, _lastCommitHash bytes20, _dataHash bytes20, _validatorHash bytes20, _appHash bytes20) returns()
func (_ETGate *ETGateTransactorSession) Update(_chainID string, _height *big.Int, _time *big.Int, _numTxs *big.Int, _blockIDHash [20]byte, _blockIDPartSetHeaderTotal *big.Int, _blockIDPartSetHEaderHash [20]byte, _lastCommitHash [20]byte, _dataHash [20]byte, _validatorHash [20]byte, _appHash [20]byte) (*types.Transaction, error) {
	return _ETGate.Contract.Update(&_ETGate.TransactOpts, _chainID, _height, _time, _numTxs, _blockIDHash, _blockIDPartSetHeaderTotal, _blockIDPartSetHEaderHash, _lastCommitHash, _dataHash, _validatorHash, _appHash)
}

// VerifyRaw is a paid mutator transaction binding the contract method 0x01bfd99c.
//
// Solidity: function verifyRaw(iavlProofLeafHash bytes20, iavlProofInnerHeight int8[], iavlProofInnerSize int256[], iavlProofInnerLeft bytes20[], iavlProofInnerRight bytes20[], iavlProofRootHash bytes20, key bytes, value bytes, root bytes20) returns()
func (_ETGate *ETGateTransactor) VerifyRaw(opts *bind.TransactOpts, iavlProofLeafHash [20]byte, iavlProofInnerHeight []int8, iavlProofInnerSize []*big.Int, iavlProofInnerLeft [][20]byte, iavlProofInnerRight [][20]byte, iavlProofRootHash [20]byte, key []byte, value []byte, root [20]byte) (*types.Transaction, error) {
	return _ETGate.contract.Transact(opts, "verifyRaw", iavlProofLeafHash, iavlProofInnerHeight, iavlProofInnerSize, iavlProofInnerLeft, iavlProofInnerRight, iavlProofRootHash, key, value, root)
}

// VerifyRaw is a paid mutator transaction binding the contract method 0x01bfd99c.
//
// Solidity: function verifyRaw(iavlProofLeafHash bytes20, iavlProofInnerHeight int8[], iavlProofInnerSize int256[], iavlProofInnerLeft bytes20[], iavlProofInnerRight bytes20[], iavlProofRootHash bytes20, key bytes, value bytes, root bytes20) returns()
func (_ETGate *ETGateSession) VerifyRaw(iavlProofLeafHash [20]byte, iavlProofInnerHeight []int8, iavlProofInnerSize []*big.Int, iavlProofInnerLeft [][20]byte, iavlProofInnerRight [][20]byte, iavlProofRootHash [20]byte, key []byte, value []byte, root [20]byte) (*types.Transaction, error) {
	return _ETGate.Contract.VerifyRaw(&_ETGate.TransactOpts, iavlProofLeafHash, iavlProofInnerHeight, iavlProofInnerSize, iavlProofInnerLeft, iavlProofInnerRight, iavlProofRootHash, key, value, root)
}

// VerifyRaw is a paid mutator transaction binding the contract method 0x01bfd99c.
//
// Solidity: function verifyRaw(iavlProofLeafHash bytes20, iavlProofInnerHeight int8[], iavlProofInnerSize int256[], iavlProofInnerLeft bytes20[], iavlProofInnerRight bytes20[], iavlProofRootHash bytes20, key bytes, value bytes, root bytes20) returns()
func (_ETGate *ETGateTransactorSession) VerifyRaw(iavlProofLeafHash [20]byte, iavlProofInnerHeight []int8, iavlProofInnerSize []*big.Int, iavlProofInnerLeft [][20]byte, iavlProofInnerRight [][20]byte, iavlProofRootHash [20]byte, key []byte, value []byte, root [20]byte) (*types.Transaction, error) {
	return _ETGate.Contract.VerifyRaw(&_ETGate.TransactOpts, iavlProofLeafHash, iavlProofInnerHeight, iavlProofInnerSize, iavlProofInnerLeft, iavlProofInnerRight, iavlProofRootHash, key, value, root)
}

// Withdraw is a paid mutator transaction binding the contract method 0xfc8488c9.
//
// Solidity: function withdraw(height uint256, iavlProofLeafHash bytes20, iavlProofInnerHeight int8[], iavlProofInnerSize int256[], iavlProofInnerLeft bytes20[], iavlProofInnerRight bytes20[], iavlProofRootHash bytes20, to address, value uint64, token address, chain bytes, seq bytes) returns()
func (_ETGate *ETGateTransactor) Withdraw(opts *bind.TransactOpts, height *big.Int, iavlProofLeafHash [20]byte, iavlProofInnerHeight []int8, iavlProofInnerSize []*big.Int, iavlProofInnerLeft [][20]byte, iavlProofInnerRight [][20]byte, iavlProofRootHash [20]byte, to common.Address, value uint64, token common.Address, chain []byte, seq []byte) (*types.Transaction, error) {
	return _ETGate.contract.Transact(opts, "withdraw", height, iavlProofLeafHash, iavlProofInnerHeight, iavlProofInnerSize, iavlProofInnerLeft, iavlProofInnerRight, iavlProofRootHash, to, value, token, chain, seq)
}

// Withdraw is a paid mutator transaction binding the contract method 0xfc8488c9.
//
// Solidity: function withdraw(height uint256, iavlProofLeafHash bytes20, iavlProofInnerHeight int8[], iavlProofInnerSize int256[], iavlProofInnerLeft bytes20[], iavlProofInnerRight bytes20[], iavlProofRootHash bytes20, to address, value uint64, token address, chain bytes, seq bytes) returns()
func (_ETGate *ETGateSession) Withdraw(height *big.Int, iavlProofLeafHash [20]byte, iavlProofInnerHeight []int8, iavlProofInnerSize []*big.Int, iavlProofInnerLeft [][20]byte, iavlProofInnerRight [][20]byte, iavlProofRootHash [20]byte, to common.Address, value uint64, token common.Address, chain []byte, seq []byte) (*types.Transaction, error) {
	return _ETGate.Contract.Withdraw(&_ETGate.TransactOpts, height, iavlProofLeafHash, iavlProofInnerHeight, iavlProofInnerSize, iavlProofInnerLeft, iavlProofInnerRight, iavlProofRootHash, to, value, token, chain, seq)
}

// Withdraw is a paid mutator transaction binding the contract method 0xfc8488c9.
//
// Solidity: function withdraw(height uint256, iavlProofLeafHash bytes20, iavlProofInnerHeight int8[], iavlProofInnerSize int256[], iavlProofInnerLeft bytes20[], iavlProofInnerRight bytes20[], iavlProofRootHash bytes20, to address, value uint64, token address, chain bytes, seq bytes) returns()
func (_ETGate *ETGateTransactorSession) Withdraw(height *big.Int, iavlProofLeafHash [20]byte, iavlProofInnerHeight []int8, iavlProofInnerSize []*big.Int, iavlProofInnerLeft [][20]byte, iavlProofInnerRight [][20]byte, iavlProofRootHash [20]byte, to common.Address, value uint64, token common.Address, chain []byte, seq []byte) (*types.Transaction, error) {
	return _ETGate.Contract.Withdraw(&_ETGate.TransactOpts, height, iavlProofLeafHash, iavlProofInnerHeight, iavlProofInnerSize, iavlProofInnerLeft, iavlProofInnerRight, iavlProofRootHash, to, value, token, chain, seq)
}

// WriteUvarint is a paid mutator transaction binding the contract method 0xd852de9a.
//
// Solidity: function writeUvarint(i uint64) returns(bytes)
func (_ETGate *ETGateTransactor) WriteUvarint(opts *bind.TransactOpts, i uint64) (*types.Transaction, error) {
	return _ETGate.contract.Transact(opts, "writeUvarint", i)
}

// WriteUvarint is a paid mutator transaction binding the contract method 0xd852de9a.
//
// Solidity: function writeUvarint(i uint64) returns(bytes)
func (_ETGate *ETGateSession) WriteUvarint(i uint64) (*types.Transaction, error) {
	return _ETGate.Contract.WriteUvarint(&_ETGate.TransactOpts, i)
}

// WriteUvarint is a paid mutator transaction binding the contract method 0xd852de9a.
//
// Solidity: function writeUvarint(i uint64) returns(bytes)
func (_ETGate *ETGateTransactorSession) WriteUvarint(i uint64) (*types.Transaction, error) {
	return _ETGate.Contract.WriteUvarint(&_ETGate.TransactOpts, i)
}
