// This file is an automatically generated Go binding. Do not modify as any
// change will likely be lost upon the next re-generation!

package contracts

import (
	"math/big"
	"strings"

	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
)

// ETGateABI is the input ABI used to generate the binding from.
const ETGateABI = "[{\"constant\":false,\"inputs\":[{\"name\":\"iavlProofLeafHash\",\"type\":\"bytes20\"},{\"name\":\"iavlProofInnerHeight\",\"type\":\"int8[]\"},{\"name\":\"iavlProofInnerSize\",\"type\":\"int256[]\"},{\"name\":\"iavlProofInnerLeft\",\"type\":\"bytes20[]\"},{\"name\":\"iavlProofInnerRight\",\"type\":\"bytes20[]\"},{\"name\":\"iavlProofRootHash\",\"type\":\"bytes20\"},{\"name\":\"key\",\"type\":\"bytes\"},{\"name\":\"value\",\"type\":\"bytes\"},{\"name\":\"root\",\"type\":\"bytes20\"}],\"name\":\"verifyRaw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"chain\",\"type\":\"bytes\"},{\"name\":\"seq\",\"type\":\"bytes\"}],\"name\":\"toKey\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"height\",\"type\":\"uint256\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint64\"},{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"chain\",\"type\":\"bytes\"},{\"name\":\"seq\",\"type\":\"uint256\"}],\"name\":\"withdrawable\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"appHash\",\"type\":\"bytes20\"}],\"name\":\"isUpdated\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_chainID\",\"type\":\"string\"},{\"name\":\"_height\",\"type\":\"uint256\"},{\"name\":\"_timeHash\",\"type\":\"bytes20\"},{\"name\":\"_numTxs\",\"type\":\"uint256\"},{\"name\":\"_blockIDHash\",\"type\":\"bytes20\"},{\"name\":\"_blockIDPartSetHeaderTotal\",\"type\":\"uint256\"},{\"name\":\"_blockIDPartSetHeaderHash\",\"type\":\"bytes20\"},{\"name\":\"_lastCommitHash\",\"type\":\"bytes20\"},{\"name\":\"_dataHash\",\"type\":\"bytes20\"},{\"name\":\"_validatorsHash\",\"type\":\"bytes20\"},{\"name\":\"_appHash\",\"type\":\"bytes20\"}],\"name\":\"update\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"chainState\",\"outputs\":[{\"name\":\"chainID\",\"type\":\"string\"},{\"name\":\"lastBlockHeight\",\"type\":\"uint256\"},{\"name\":\"totalVotingPower\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"k\",\"type\":\"uint256\"}],\"name\":\"getUpdated\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"address\"}],\"name\":\"toBytes\",\"outputs\":[{\"name\":\"b\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint64\"},{\"name\":\"chain\",\"type\":\"bytes\"}],\"name\":\"depositEther\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pubkey\",\"type\":\"bytes\"}],\"name\":\"newEthAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"delay\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"k1\",\"type\":\"bytes\"},{\"name\":\"k2\",\"type\":\"address\"}],\"name\":\"getDeposited\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"k\",\"type\":\"bytes\"}],\"name\":\"getUsed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint64\"},{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"chain\",\"type\":\"bytes\"}],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastWithdraw\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"i\",\"type\":\"uint64\"}],\"name\":\"writeUvarint\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint64\"},{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"toVal\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"senderIsValidator\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"arr\",\"type\":\"bytes20\"}],\"name\":\"bytes20IsZero\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isValidator\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"height\",\"type\":\"uint256\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint64\"},{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"chain\",\"type\":\"bytes\"},{\"name\":\"seq\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_chainID\",\"type\":\"string\"},{\"name\":\"_pubkey\",\"type\":\"bytes\"},{\"name\":\"_votingPower\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint64\"},{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"chain\",\"type\":\"bytes\"},{\"indexed\":false,\"name\":\"seq\",\"type\":\"uint64\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint64\"},{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"chain\",\"type\":\"bytes\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"uploader\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"height\",\"type\":\"uint256\"}],\"name\":\"Update\",\"type\":\"event\"}]"

// ETGateBin is the compiled bytecode used for deploying new contracts.
const ETGateBin = `60606040526000600855600560095534156200001a57600080fd5b60405162003830380380620038308339810160405280805182019190602001805182019190602001805190910190505b600080600062000059620006f6565b600085516041028751146200006d57600080fd5b60009350600092505b85518310156200023b576041604051805910620000905750595b908082528060200260200182016040525b509150600090505b60418110156200013e578681846041020181518110620000c557fe5b01602001517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028282815181106200011c57fe5b906020010190600160f860020a031916908160001a9053505b600101620000a9565b845485906001810162000152838262000708565b916000526020600020906005020160005b62000193858a88815181106200017557fe5b9060200190602002015164010000000062002a5f6200027d82021704565b91905081518154600160a060020a031916600160a060020a03919091161781556020820151600182018054600160a060020a0319166c01000000000000000000000000909204919091179055604082015181600201908051620001fb9291602001906200073d565b5060608201518160030155608082015181600401555050508583815181106200022057fe5b90602001906020020151840193505b60019092019162000076565b600a888051620002509291602001906200073d565b5084546200026390600b90879062000849565b506000600c55600d8490555b505050505050505062000ac8565b6200028762000927565b600062000293620006f6565b600080620002af876401000000006200117a620005b682021704565b93506021604051805910620002c15750595b908082528060200260200182016040525b509250600287604081518110620002e557fe5b01602001517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900460ff168115156200035f57fe5b0660ff1660001415620003b9577f0200000000000000000000000000000000000000000000000000000000000000836000815181106200039b57fe5b906020010190600160f860020a031916908160001a90535062000401565b7f030000000000000000000000000000000000000000000000000000000000000083600081518110620003e857fe5b906020010190600160f860020a031916908160001a9053505b600191505b602182101562000499578682815181106200041d57fe5b01602001517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028383815181106200047457fe5b906020010190600160f860020a031916908160001a9053505b60019091019062000406565b60036002846000604051602001526040518082805190602001908083835b60208310620004d957805182525b601f199092019160209182019101620004b7565b6001836020036101000a03801982511681845116808217855250505050505090500191505060206040518083038160008661646e5a03f115156200051c57600080fd5b5050604051805190506000604051602001526040519081526020908101906040518083038160008661646e5a03f115156200055657600080fd5b5050604051516c0100000000000000000000000002905060a06040519081016040528085600160a060020a03168152602001826001606060020a0319168152602001888152602001878152602001600081525094505b5050505092915050565b6000620005c2620006f6565b60006001845103604051805910620005d75750595b908082528060200260200182016040525b509150600190505b835181101562000683578381815181106200060757fe5b01602001517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028260018303815181106200066157fe5b906020010190600160f860020a031916908160001a9053505b600101620005f0565b816040518082805190602001908083835b60208310620006b657805182525b601f19909201916020918201910162000694565b6001836020036101000a0380198251168184511617909252505050919091019250604091505051908190039020600160a060020a031692505b5050919050565b60206040519081016040526000815290565b81548183558181151162000737576005028160050283600052602060002091820191016200073791906200095e565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200078057805160ff1916838001178555620007b0565b82800160010185558215620007b0579182015b82811115620007b057825182559160200191906001019062000793565b5b50620007bf929150620009b9565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200078057805160ff1916838001178555620007b0565b82800160010185558215620007b0579182015b82811115620007b057825182559160200191906001019062000793565b5b50620007bf929150620009b9565b5090565b828054828255906000526020600020906005028101928215620009145760005260206000209160050282015b82811115620009145782548254600160a060020a03909116600160a060020a031991821617835560018085015481850180549093166c0100000000000000000000000091820291909104179091556002808501805486938693620008ed938186019390926101009082161502600019011604620009dd565b50600382015481600301556004820154816004015550509160050191906005019062000875565b5b50620007bf9291506200095e565b5090565b60a060405190810160409081526000808352602083015281016200094a620006f6565b815260200160008152602001600081525090565b620009b691905b80821115620007bf578054600160a060020a03199081168255600182018054909116905560006200099a600283018262000a7c565b50600060038201819055600482015560050162000965565b5090565b90565b620009b691905b80821115620007bf5760008155600101620009c0565b5090565b90565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1062000a185780548555620007b0565b82800160010185558215620007b057600052602060002091601f016020900482015b82811115620007b057825482559160010191906001019062000a3a565b5b50620007bf929150620009b9565b5090565b60206040519081016040526000815290565b50805460018160011615610100020316600290046000825580601f1062000aa4575062000ac4565b601f01602090049060005260206000209081019062000ac49190620009b9565b5b50565b612d588062000ad86000396000f300606060405236156101015763ffffffff60e060020a60003504166301bfd99c81146101065780630c44ec81146102c55780632b07f190146103d0578063372bc9a41461045e57806343c4d499146104925780634535e1c0146105345780634ce6ee9d146105df578063593b79fe146106075780635f39fba31461069e57806361e586fa146107045780636a42b8f81461077157806376ede4f8146107965780637fd43a68146108045780639039bb4f14610869578063b52eea74146108d6578063d852de9a146108fb578063e2c229ea14610993578063f6d07f8914610a3e578063f6fff50514610a65578063facd743b14610a99578063fe4fa2bb14610acc575b600080fd5b341561011157600080fd5b6102c3600480356001606060020aa0319873516969095506040808201955060209182013587018083019550359350839250601f830182900482029091019051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f016020809104026020016040519081016040528181529291906020840183838082843750949650505092356001606060020a0319169250610b48915050565b005b34156102d057600080fd5b61035860046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f016020809104026020016040519081016040528181529291906020840183838082843750949650610b8195505050505050565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156103955780820151818401525b60200161037c565b50505050905090810190601f1680156103c25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156103db57600080fd5b61044a6004803590600160a060020a036024803582169267ffffffffffffffff6044351692606435169160a49060843590810190830135806020601f820181900481020160405190810160405281815292919060208401838380828437509496505093359350610d6992505050565b604051901515815260200160405180910390f35b341561046957600080fd5b61044a6001606060020a031960043516610ef4565b604051901515815260200160405180910390f35b341561049d57600080fd5b6102c360046024813581810190830135806020601f82018190048102016040519081016040528181529291906020840183838082843750949650508435946001606060020a0319602082013581169550604082013594506060820135811693506080820135925060a082013581169160c081013582169160e08201358116916101008101358216916101209091013516610fad565b005b341561053f57600080fd5b61054761110e565b6040516020810183905260408101829052606080825284546002600019610100600184161502019091160490820181905281906080820190869080156105ce5780601f106105a3576101008083540402835291602001916105ce565b820191906000526020600020905b8154815290600101906020018083116105b157829003601f168201915b505094505050505060405180910390f35b34156105ea57600080fd5b6105f560043561111b565b60405190815260200160405180910390f35b341561061257600080fd5b610358600160a060020a0360043516611130565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156103955780820151818401525b60200161037c565b50505050905090810190601f1680156103c25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102c360048035600160a060020a0316906024803567ffffffffffffffff16919060649060443590810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284375094965061116795505050505050565b005b341561070f57600080fd5b61075560046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284375094965061117a95505050505050565b604051600160a060020a03909116815260200160405180910390f35b341561077c57600080fd5b6105f5611279565b60405190815260200160405180910390f35b34156107a157600080fd5b6105f560046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284375094965050509235600160a060020a0316925061127f915050565b60405190815260200160405180910390f35b341561080f57600080fd5b61044a60046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284375094965061130b95505050505050565b604051901515815260200160405180910390f35b6102c360048035600160a060020a03908116916024803567ffffffffffffffff169260443516919060849060643590810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284375094965061138095505050505050565b005b34156108e157600080fd5b6105f56115d6565b60405190815260200160405180910390f35b341561090657600080fd5b61035867ffffffffffffffff600435166115dc565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156103955780820151818401525b60200161037c565b50505050905090810190601f1680156103c25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561099e57600080fd5b610358600160a060020a0360043581169067ffffffffffffffff6024351690604435166116c5565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156103955780820151818401525b60200161037c565b50505050905090810190601f1680156103c25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3415610a4957600080fd5b61044a611956565b604051901515815260200160405180910390f35b3415610a7057600080fd5b61044a6001606060020a031960043516611967565b604051901515815260200160405180910390f35b3415610aa457600080fd5b61044a600160a060020a03600435166119bb565b604051901515815260200160405180910390f35b3415610ad757600080fd5b6102c36004803590600160a060020a036024803582169267ffffffffffffffff6044351692606435169160a49060843590810190830135806020601f820181900481020160405190810160405281815292919060208401838380828437509496505093359350611a1a92505050565b005b610b50612910565b610b5e8a8a8a8a8a8a611d67565b9050610b6c81858585611edd565b1515610b7457fe5b5b50505050505050505050565b610b89612938565b610b91612938565b610b99612938565b600060408051908101604052601081527f6574676174652c77697468647261772c00000000000000000000000000000000602082015292508451865184510160010101604051805910610be95750595b908082528060200260200182016040525b509150600090505b8251811015610c5657828181518110610c1757fe5b016020015160f860020a900460f860020a02828281518110610c3557fe5b906020010190600160f860020a031916908160001a9053505b600101610c02565b5060005b8551811015610cb157858181518110610c6f57fe5b016020015160f860020a900460f860020a02828285510181518110610c9057fe5b906020010190600160f860020a031916908160001a9053505b600101610c5a565b7f2c0000000000000000000000000000000000000000000000000000000000000082875185510181518110610ce257fe5b906020010190600160f860020a031916908160001a905350600090505b8451811015610d5c57848181518110610d1457fe5b016020015160f860020a900460f860020a02828288518651016001010181518110610d3b57fe5b906020010190600160f860020a031916908160001a9053505b600101610cff565b8193505b50505092915050565b600060076000888888888888604051868152606060020a600160a060020a0380881682026020840152780100000000000000000000000000000000000000000000000067ffffffffffffffff8816026034840152851602603c8201526050810183805190602001908083835b60208310610df557805182525b601f199092019160209182019101610dd5565b6001836020036101000a038019825116818451161790925250505091909101928352505060200194506040935050505051908190039020815260208101919091526040016000205460ff16158015610e51575081600854600101145b8015610ee757508467ffffffffffffffff166005846040518082805190602001908083835b60208310610e9657805182525b601f199092019160209182019101610e76565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051908190039020600160a060020a0386166000908152602091909152604090205410155b90505b9695505050505050565b6000805b6001606060020a03198316600090815260026020526040902054811015610f87576001606060020a0319831660009081526002602052604090208054600160a060020a033316919083908110610f4a57fe5b906000526020600020900160005b9054906101000a9004600160a060020a0316600160a060020a03161415610f7e57610f87565b5b600101610ef8565b6001606060020a0319831660009081526002602052604090205481141591505b50919050565b610fb5611956565b1515610fbd57fe5b600c546001018a14610fce57600080fd5b610fd781610ef4565b15610fe157600080fd5b6110bb610120604051908101604052808d81526020018c81526020018b6bffffffffffffffffffffffff191681526020018a815260200160408051908101604052808b6bffffffffffffffffffffffff1916815260200160408051908101604052808c81526020018b6bffffffffffffffffffffffff19168152508152508152602001866bffffffffffffffffffffffff19168152602001856bffffffffffffffffffffffff19168152602001846bffffffffffffffffffffffff19168152602001836bffffffffffffffffffffffff1916815250612000565b7f5f66d2a93b609bc6596b75c6dbb0e4f3f7cafd4b3b617157ff304d1076e58375338b604051600160a060020a03909216825260208201526040908101905180910390a15b5b5050505050505050505050565b600c54600d54600a919083565b6000818152600160205260409020545b919050565b611138612938565b60405174140000000000000000000000000000000000000000831860148201526034810160405290505b919050565b6111748383600084611380565b5b505050565b6000611184612938565b600060018451036040518059106111985750595b908082528060200260200182016040525b509150600190505b8351811015611208578381815181106111c657fe5b016020015160f860020a900460f860020a028260018303815181106111e757fe5b906020010190600160f860020a031916908160001a9053505b6001016111b1565b816040518082805190602001908083835b6020831061123957805182525b601f199092019160209182019101611219565b6001836020036101000a0380198251168184511617909252505050919091019250604091505051908190039020600160a060020a031692505b5050919050565b60095481565b60006005836040518082805190602001908083835b602083106112b457805182525b601f199092019160209182019101611294565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051908190039020600160a060020a0383166000908152602091909152604090205490505b92915050565b60006004826040518082805190602001908083835b6020831061134057805182525b601f199092019160209182019101611320565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040519081900390205460ff1690505b919050565b600160a060020a03821615156113a85767ffffffffffffffff831634146113a357fe5b61143e565b81600160a060020a03166323b872dd33308660006040516020015260405160e060020a63ffffffff8616028152600160a060020a03938416600482015291909216602482015267ffffffffffffffff9091166044820152606401602060405180830381600087803b151561141b57600080fd5b6102c65a03f1151561142c57600080fd5b50505060405180519050151561143e57fe5b5b8267ffffffffffffffff166005826040518082805190602001908083835b6020831061147d57805182525b601f19909201916020918201910161145d565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051908190039020600160a060020a0384166000908152602091909152604090819020805492909201909155600e805467ffffffffffffffff19811667ffffffffffffffff91821660018101909216179091557f87350bc076f75ec65b2f0c90202786aada79ab59716cfd919b595c3f173b18a991869186918691869151600160a060020a03808716825267ffffffffffffffff808716602084015290851660408301528216608082015260a06060820181815290820184818151815260200191508051906020019080838360005b838110156115915780820151818401525b602001611578565b50505050905090810190601f1680156115be5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390a15b50505050565b60085481565b6115e4612938565b60006115ee612938565b60006115f985612230565b92508260010160ff1660405180591061160f5750595b908082528060200260200182016040525b5091508260f860020a028260008151811061163757fe5b906020010190600160f860020a031916908160001a905350600090505b8260ff168110156116b957806001840360ff160360080260020a8567ffffffffffffffff1681151561168257fe5b0460f860020a0282826001018151811061169857fe5b906020010190600160f860020a031916908160001a9053505b600101611654565b8193505b505050919050565b6116cd612938565b6116d5612938565b6116dd612938565b6116e5612938565b6116ed612938565b6116f5612938565b6116fd612938565b6000806117098c611130565b975061171588516115dc565b96506117208b6115dc565b955061172b8a611130565b945061173785516115dc565b93508451845187518a518a51010101016040518059106117545750595b908082528060200260200182016040525b50925060009150600090505b86518110156117cb5786818151811061178657fe5b016020015160f860020a900460f860020a028383806001019450815181106117aa57fe5b906020010190600160f860020a031916908160001a9053505b600101611771565b5060005b8751811015611829578781815181106117e457fe5b016020015160f860020a900460f860020a0283838060010194508151811061180857fe5b906020010190600160f860020a031916908160001a9053505b6001016117cf565b5060005b85518110156118875785818151811061184257fe5b016020015160f860020a900460f860020a0283838060010194508151811061186657fe5b906020010190600160f860020a031916908160001a9053505b60010161182d565b5060005b83518110156118e5578381815181106118a057fe5b016020015160f860020a900460f860020a028383806001019450815181106118c457fe5b906020010190600160f860020a031916908160001a9053505b60010161188b565b5060005b8451811015611943578481815181106118fe57fe5b016020015160f860020a900460f860020a0283838060010194508151811061192257fe5b906020010190600160f860020a031916908160001a9053505b6001016118e9565b8298505b50505050505050509392505050565b6000611961336119bb565b90505b90565b6000805b60148110156119ae5782816014811061198057fe5b1a60f860020a02600160f860020a031916600060f860020a021415156119a5576119ae565b5b60010161196b565b8060141491505b50919050565b6000805b600b54811015611a0b57600b8054829081106119d757fe5b906000526020600020906005020160005b5054600160a060020a0384811691161415611a0257611a0b565b5b6001016119bf565b600b5481141591505b50919050565b6000611a24611956565b1515611a2c57fe5b611a3a878787878787610d69565b1515611a4557600080fd5b868686868686604051868152606060020a600160a060020a0380881682026020840152780100000000000000000000000000000000000000000000000067ffffffffffffffff8816026034840152851602603c8201526050810183805190602001908083835b60208310611acb57805182525b601f199092019160209182019101611aab565b6001836020036101000a03801982511681845116179092525050509190910192835250506020019450604093505050505180910390209050611b0c8161232d565b15611b1657600080fd5b6000818152600660205260409020805460018101611b34838261294a565b916000526020600020900160005b8154600160a060020a033381166101009390930a9283029202191617905550600b5460008281526006602052604090205460029091026003909102118015611b99575060008181526007602052604090205460ff16155b15611d5c576000818152600760205260409020805460ff191660011790556008829055600160a060020a0384161515611c0a57600160a060020a03861667ffffffffffffffff861680156108fc0290604051600060405180830381858888f193505050501515611c0557fe5b611c94565b83600160a060020a031663a9059cbb878760006040516020015260405160e060020a63ffffffff8516028152600160a060020a03909216600483015267ffffffffffffffff166024820152604401602060405180830381600087803b1515611c7157600080fd5b6102c65a03f11515611c8257600080fd5b505050604051805190501515611c9457fe5b5b7f88bd5555909f63a46f58e293f34fc4c2d7796f94a183485973ca32856e6c147d86868686604051600160a060020a03808616825267ffffffffffffffff851660208301528316604082015260806060820181815290820183818151815260200191508051906020019080838360005b83811015611d1e5780820151818401525b602001611d05565b50505050905090810190601f168015611d4b5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a15b5b5b50505050505050565b611d6f612910565b6000611d79612938565b600088519250875183148015611d8f5750865183145b8015611d9b5750855183145b1515611da657600080fd5b82604051805910611db45750595b908082528060200260200182016040528015611dea57816020015b611dd7612986565b815260200190600190039081611dcf5790505b509150600090505b82811015611ea5576080604051908101604052808a8381518110611e1257fe5b9060200190602002015160000b8152602001898381518110611e3057fe5b906020019060200201518152602001888381518110611e4b57fe5b906020019060200201516001606060020a0319168152602001878381518110611e7057fe5b906020019060200201516001606060020a0319169052828281518110611e9257fe5b602090810290910101525b600101611df2565b606060405190810160409081526001606060020a0319808d1683526020830185905287169082015293505b5050509695505050505050565b6000806000836040516001606060020a0319909116815260140160405190819003902060408801516040516001606060020a0319909116815260140160405190819003902014611f305760009250611ff6565b611f4c60408051908101604052878152602081018790526123c5565b915086516040516001606060020a03199091168152601401604051908190039020826040516001606060020a0319909116815260140160405190819003902014611f995760009250611ff6565b5060005b866020015151811015611fd857611fcd87602001518281518110611fbd57fe5b906020019060200201518361259f565b91505b600101611f9d565b6001606060020a0319821660408801516001606060020a0319161492505b5050949350505050565b600260008261010001516001606060020a03191681526020810191909152604001600020805460018101612034838261294a565b916000526020600020900160005b8154600160a060020a0333811661010093840a90810291021990911617909155600b5460029081029250906000908401516001606060020a03191681526020810191909152604001600020546003021180156120b557506001600082602001518152602001908152602001600020546000145b1561222c5780600080836020015181526020019081526020016000206000820151819080516120e89291602001906129ad565b50602082015181600101556040820151600282018054600160a060020a031916606060020a9092049190911790556060820151816003015560808201516004820181518154600160a060020a031916606060020a9091041781556020820151600182018151815560208201516001919091018054600160a060020a031916606060020a90920491909117905550505060a0820151600782018054600160a060020a031916606060020a90920491909117905560c0820151600882018054600160a060020a031916606060020a90920491909117905560e0820151600982018054600160a060020a031916606060020a909204919091179055610100820151600a919091018054600160a060020a031916606060020a90920491909117905550436001600060208401518152602001908152602001600020819055508060200151600c555b5b50565b600067ffffffffffffffff8216151561224b5750600061112b565b6101008267ffffffffffffffff1610156122675750600161112b565b620100008267ffffffffffffffff1610156122845750600261112b565b63010000008267ffffffffffffffff1610156122a25750600361112b565b6401000000008267ffffffffffffffff1610156122c15750600461112b565b650100000000008267ffffffffffffffff1610156122e15750600561112b565b66010000000000008267ffffffffffffffff1610156123025750600661112b565b6701000000000000008267ffffffffffffffff1610156123245750600761112b565b5060085b919050565b6000805b6000838152600660205260409020548110156123aa5760008381526006602052604090208054600160a060020a03331691908390811061236d57fe5b906000526020600020900160005b9054906101000a9004600160a060020a0316600160a060020a031614156123a1576123aa565b5b600101612331565b60008381526006602052604090205481141591505b50919050565b600060038160f860020a806123da60146115dc565b86516123e660146115dc565b88602001516000604051602001526040517fff0000000000000000000000000000000000000000000000000000000000000080891682528781166001830152861660028201526003810185805190602001908083835b6020831061245c57805182525b601f19909201916020918201910161243c565b6001836020036101000a038019825116818451161790925250505091909101905084805190602001908083835b602083106124a957805182525b601f199092019160209182019101612489565b6001836020036101000a038019825116818451161790925250505091909101905083805190602001908083835b602083106124f657805182525b601f1990920191602091820191016124d6565b6001836020036101000a038019825116818451161790925250505091909101905082805190602001908083835b6020831061254357805182525b601f199092019160209182019101612523565b6001836020036101000a03801982511681845116808217855250505050505090500197505050505050505060206040518083038160008661646e5a03f1151561258b57600080fd5b505060405151606060020a0290505b919050565b60006125ae8360400151611967565b1561275e576003835160f860020a026125ca85602001516115dc565b6125d460146115dc565b856125e588606001515060146115dc565b88606001516000604051602001526040517fff00000000000000000000000000000000000000000000000000000000000000871681526001810186805190602001908083835b6020831061264b57805182525b601f19909201916020918201910161262b565b6001836020036101000a038019825116818451161790925250505091909101905085805190602001908083835b6020831061269857805182525b601f199092019160209182019101612678565b6001836020036101000a03801982511681845116179092525050506001606060020a0319871692019182525060140183805190602001908083835b602083106126f357805182525b601f1990920191602091820191016126d3565b6001836020036101000a03801982511681845116179092525050506001606060020a0319909416919093019081526014019650602095506040945050505050518083038160008661646e5a03f1151561274b57600080fd5b505060405151606060020a029050611305565b6003835160f860020a0261277585602001516115dc565b61278586604001515060146115dc565b866040015161279460146115dc565b876000604051602001526040517fff00000000000000000000000000000000000000000000000000000000000000871681526001810186805190602001908083835b6020831061264b57805182525b601f19909201916020918201910161262b565b6001836020036101000a038019825116818451161790925250505091909101905085805190602001908083835b6020831061269857805182525b601f199092019160209182019101612678565b6001836020036101000a03801982511681845116179092525050506001606060020a0319871692019182525060140183805190602001908083835b602083106126f357805182525b601f1990920191602091820191016126d3565b6001836020036101000a03801982511681845116179092525050506001606060020a0319909416919093019081526014019650602095506040945050505050518083038160008661646e5a03f1151561274b57600080fd5b505060405151606060020a029050611305565b5b92915050565b6060604051908101604052600081526020810161292b612938565b8152600060209091015290565b60206040519081016040526000815290565b81548183558181151161117457600083815260209020611174918101908301612a3e565b5b505050565b60206040519081016040526000815290565b60806040519081016040908152600080835260208301819052908201819052606082015290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106129ee57805160ff1916838001178555612a1b565b82800160010185558215612a1b579182015b82811115612a1b578251825591602001919060010190612a00565b5b50612a28929150612a3e565b5090565b60206040519081016040526000815290565b61196491905b80821115612a285760008155600101612a44565b5090565b90565b612a67612ce5565b6000612a71612938565b600080612a7d8761117a565b93506021604051805910612a8e5750595b908082528060200260200182016040525b509250600287604081518110612ab157fe5b016020015160f860020a900460f860020a0260f860020a900460ff16811515612ad657fe5b0660ff1660001415612b2d577f020000000000000000000000000000000000000000000000000000000000000083600081518110612b1057fe5b906020010190600160f860020a031916908160001a905350612b74565b7f030000000000000000000000000000000000000000000000000000000000000083600081518110612b5b57fe5b906020010190600160f860020a031916908160001a9053505b600191505b6021821015612bd057868281518110612b8e57fe5b016020015160f860020a900460f860020a02838381518110612bac57fe5b906020010190600160f860020a031916908160001a9053505b600190910190612b79565b60036002846000604051602001526040518082805190602001908083835b60208310612c0e57805182525b601f199092019160209182019101612bee565b6001836020036101000a03801982511681845116808217855250505050505090500191505060206040518083038160008661646e5a03f11515612c5057600080fd5b5050604051805190506000604051602001526040519081526020908101906040518083038160008661646e5a03f11515612c8957600080fd5b505060405151606060020a02905060a06040519081016040528085600160a060020a03168152602001826bffffffffffffffffffffffff19168152602001888152602001878152602001600081525094505b5050505092915050565b60a06040519081016040908152600080835260208301528101612d06612938565b815260200160008152602001600081525090565b602060405190810160405260008152905600a165627a7a72305820030c84b473d122d553f267d6c26b55294f6137e917ebbf821ce19e42bfdaa3020029`

// DeployETGate deploys a new Ethereum contract, binding an instance of ETGate to it.
func DeployETGate(auth *bind.TransactOpts, backend bind.ContractBackend, _chainID string, _pubkey []byte, _votingPower []*big.Int) (common.Address, *types.Transaction, *ETGate, error) {
	parsed, err := abi.JSON(strings.NewReader(ETGateABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(ETGateBin), backend, _chainID, _pubkey, _votingPower)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &ETGate{ETGateCaller: ETGateCaller{contract: contract}, ETGateTransactor: ETGateTransactor{contract: contract}}, nil
}

// ETGate is an auto generated Go binding around an Ethereum contract.
type ETGate struct {
	ETGateCaller     // Read-only binding to the contract
	ETGateTransactor // Write-only binding to the contract
}

// ETGateCaller is an auto generated read-only Go binding around an Ethereum contract.
type ETGateCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ETGateTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ETGateTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ETGateSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ETGateSession struct {
	Contract     *ETGate           // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ETGateCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ETGateCallerSession struct {
	Contract *ETGateCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// ETGateTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ETGateTransactorSession struct {
	Contract     *ETGateTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ETGateRaw is an auto generated low-level Go binding around an Ethereum contract.
type ETGateRaw struct {
	Contract *ETGate // Generic contract binding to access the raw methods on
}

// ETGateCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ETGateCallerRaw struct {
	Contract *ETGateCaller // Generic read-only contract binding to access the raw methods on
}

// ETGateTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ETGateTransactorRaw struct {
	Contract *ETGateTransactor // Generic write-only contract binding to access the raw methods on
}

// NewETGate creates a new instance of ETGate, bound to a specific deployed contract.
func NewETGate(address common.Address, backend bind.ContractBackend) (*ETGate, error) {
	contract, err := bindETGate(address, backend, backend)
	if err != nil {
		return nil, err
	}
	return &ETGate{ETGateCaller: ETGateCaller{contract: contract}, ETGateTransactor: ETGateTransactor{contract: contract}}, nil
}

// NewETGateCaller creates a new read-only instance of ETGate, bound to a specific deployed contract.
func NewETGateCaller(address common.Address, caller bind.ContractCaller) (*ETGateCaller, error) {
	contract, err := bindETGate(address, caller, nil)
	if err != nil {
		return nil, err
	}
	return &ETGateCaller{contract: contract}, nil
}

// NewETGateTransactor creates a new write-only instance of ETGate, bound to a specific deployed contract.
func NewETGateTransactor(address common.Address, transactor bind.ContractTransactor) (*ETGateTransactor, error) {
	contract, err := bindETGate(address, nil, transactor)
	if err != nil {
		return nil, err
	}
	return &ETGateTransactor{contract: contract}, nil
}

// bindETGate binds a generic wrapper to an already deployed contract.
func bindETGate(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(ETGateABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ETGate *ETGateRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _ETGate.Contract.ETGateCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ETGate *ETGateRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ETGate.Contract.ETGateTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ETGate *ETGateRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ETGate.Contract.ETGateTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ETGate *ETGateCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _ETGate.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ETGate *ETGateTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ETGate.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ETGate *ETGateTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ETGate.Contract.contract.Transact(opts, method, params...)
}

// Bytes20IsZero is a free data retrieval call binding the contract method 0xf6fff505.
//
// Solidity: function bytes20IsZero(arr bytes20) constant returns(bool)
func (_ETGate *ETGateCaller) Bytes20IsZero(opts *bind.CallOpts, arr [20]byte) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _ETGate.contract.Call(opts, out, "bytes20IsZero", arr)
	return *ret0, err
}

// Bytes20IsZero is a free data retrieval call binding the contract method 0xf6fff505.
//
// Solidity: function bytes20IsZero(arr bytes20) constant returns(bool)
func (_ETGate *ETGateSession) Bytes20IsZero(arr [20]byte) (bool, error) {
	return _ETGate.Contract.Bytes20IsZero(&_ETGate.CallOpts, arr)
}

// Bytes20IsZero is a free data retrieval call binding the contract method 0xf6fff505.
//
// Solidity: function bytes20IsZero(arr bytes20) constant returns(bool)
func (_ETGate *ETGateCallerSession) Bytes20IsZero(arr [20]byte) (bool, error) {
	return _ETGate.Contract.Bytes20IsZero(&_ETGate.CallOpts, arr)
}

// ChainState is a free data retrieval call binding the contract method 0x4535e1c0.
//
// Solidity: function chainState() constant returns(chainID string, lastBlockHeight uint256, totalVotingPower uint256)
func (_ETGate *ETGateCaller) ChainState(opts *bind.CallOpts) (struct {
	ChainID          string
	LastBlockHeight  *big.Int
	TotalVotingPower *big.Int
}, error) {
	ret := new(struct {
		ChainID          string
		LastBlockHeight  *big.Int
		TotalVotingPower *big.Int
	})
	out := ret
	err := _ETGate.contract.Call(opts, out, "chainState")
	return *ret, err
}

// ChainState is a free data retrieval call binding the contract method 0x4535e1c0.
//
// Solidity: function chainState() constant returns(chainID string, lastBlockHeight uint256, totalVotingPower uint256)
func (_ETGate *ETGateSession) ChainState() (struct {
	ChainID          string
	LastBlockHeight  *big.Int
	TotalVotingPower *big.Int
}, error) {
	return _ETGate.Contract.ChainState(&_ETGate.CallOpts)
}

// ChainState is a free data retrieval call binding the contract method 0x4535e1c0.
//
// Solidity: function chainState() constant returns(chainID string, lastBlockHeight uint256, totalVotingPower uint256)
func (_ETGate *ETGateCallerSession) ChainState() (struct {
	ChainID          string
	LastBlockHeight  *big.Int
	TotalVotingPower *big.Int
}, error) {
	return _ETGate.Contract.ChainState(&_ETGate.CallOpts)
}

// Delay is a free data retrieval call binding the contract method 0x6a42b8f8.
//
// Solidity: function delay() constant returns(uint256)
func (_ETGate *ETGateCaller) Delay(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _ETGate.contract.Call(opts, out, "delay")
	return *ret0, err
}

// Delay is a free data retrieval call binding the contract method 0x6a42b8f8.
//
// Solidity: function delay() constant returns(uint256)
func (_ETGate *ETGateSession) Delay() (*big.Int, error) {
	return _ETGate.Contract.Delay(&_ETGate.CallOpts)
}

// Delay is a free data retrieval call binding the contract method 0x6a42b8f8.
//
// Solidity: function delay() constant returns(uint256)
func (_ETGate *ETGateCallerSession) Delay() (*big.Int, error) {
	return _ETGate.Contract.Delay(&_ETGate.CallOpts)
}

// GetDeposited is a free data retrieval call binding the contract method 0x76ede4f8.
//
// Solidity: function getDeposited(k1 bytes, k2 address) constant returns(uint256)
func (_ETGate *ETGateCaller) GetDeposited(opts *bind.CallOpts, k1 []byte, k2 common.Address) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _ETGate.contract.Call(opts, out, "getDeposited", k1, k2)
	return *ret0, err
}

// GetDeposited is a free data retrieval call binding the contract method 0x76ede4f8.
//
// Solidity: function getDeposited(k1 bytes, k2 address) constant returns(uint256)
func (_ETGate *ETGateSession) GetDeposited(k1 []byte, k2 common.Address) (*big.Int, error) {
	return _ETGate.Contract.GetDeposited(&_ETGate.CallOpts, k1, k2)
}

// GetDeposited is a free data retrieval call binding the contract method 0x76ede4f8.
//
// Solidity: function getDeposited(k1 bytes, k2 address) constant returns(uint256)
func (_ETGate *ETGateCallerSession) GetDeposited(k1 []byte, k2 common.Address) (*big.Int, error) {
	return _ETGate.Contract.GetDeposited(&_ETGate.CallOpts, k1, k2)
}

// GetUpdated is a free data retrieval call binding the contract method 0x4ce6ee9d.
//
// Solidity: function getUpdated(k uint256) constant returns(uint256)
func (_ETGate *ETGateCaller) GetUpdated(opts *bind.CallOpts, k *big.Int) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _ETGate.contract.Call(opts, out, "getUpdated", k)
	return *ret0, err
}

// GetUpdated is a free data retrieval call binding the contract method 0x4ce6ee9d.
//
// Solidity: function getUpdated(k uint256) constant returns(uint256)
func (_ETGate *ETGateSession) GetUpdated(k *big.Int) (*big.Int, error) {
	return _ETGate.Contract.GetUpdated(&_ETGate.CallOpts, k)
}

// GetUpdated is a free data retrieval call binding the contract method 0x4ce6ee9d.
//
// Solidity: function getUpdated(k uint256) constant returns(uint256)
func (_ETGate *ETGateCallerSession) GetUpdated(k *big.Int) (*big.Int, error) {
	return _ETGate.Contract.GetUpdated(&_ETGate.CallOpts, k)
}

// GetUsed is a free data retrieval call binding the contract method 0x7fd43a68.
//
// Solidity: function getUsed(k bytes) constant returns(bool)
func (_ETGate *ETGateCaller) GetUsed(opts *bind.CallOpts, k []byte) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _ETGate.contract.Call(opts, out, "getUsed", k)
	return *ret0, err
}

// GetUsed is a free data retrieval call binding the contract method 0x7fd43a68.
//
// Solidity: function getUsed(k bytes) constant returns(bool)
func (_ETGate *ETGateSession) GetUsed(k []byte) (bool, error) {
	return _ETGate.Contract.GetUsed(&_ETGate.CallOpts, k)
}

// GetUsed is a free data retrieval call binding the contract method 0x7fd43a68.
//
// Solidity: function getUsed(k bytes) constant returns(bool)
func (_ETGate *ETGateCallerSession) GetUsed(k []byte) (bool, error) {
	return _ETGate.Contract.GetUsed(&_ETGate.CallOpts, k)
}

// IsUpdated is a free data retrieval call binding the contract method 0x372bc9a4.
//
// Solidity: function isUpdated(appHash bytes20) constant returns(bool)
func (_ETGate *ETGateCaller) IsUpdated(opts *bind.CallOpts, appHash [20]byte) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _ETGate.contract.Call(opts, out, "isUpdated", appHash)
	return *ret0, err
}

// IsUpdated is a free data retrieval call binding the contract method 0x372bc9a4.
//
// Solidity: function isUpdated(appHash bytes20) constant returns(bool)
func (_ETGate *ETGateSession) IsUpdated(appHash [20]byte) (bool, error) {
	return _ETGate.Contract.IsUpdated(&_ETGate.CallOpts, appHash)
}

// IsUpdated is a free data retrieval call binding the contract method 0x372bc9a4.
//
// Solidity: function isUpdated(appHash bytes20) constant returns(bool)
func (_ETGate *ETGateCallerSession) IsUpdated(appHash [20]byte) (bool, error) {
	return _ETGate.Contract.IsUpdated(&_ETGate.CallOpts, appHash)
}

// IsValidator is a free data retrieval call binding the contract method 0xfacd743b.
//
// Solidity: function isValidator(addr address) constant returns(bool)
func (_ETGate *ETGateCaller) IsValidator(opts *bind.CallOpts, addr common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _ETGate.contract.Call(opts, out, "isValidator", addr)
	return *ret0, err
}

// IsValidator is a free data retrieval call binding the contract method 0xfacd743b.
//
// Solidity: function isValidator(addr address) constant returns(bool)
func (_ETGate *ETGateSession) IsValidator(addr common.Address) (bool, error) {
	return _ETGate.Contract.IsValidator(&_ETGate.CallOpts, addr)
}

// IsValidator is a free data retrieval call binding the contract method 0xfacd743b.
//
// Solidity: function isValidator(addr address) constant returns(bool)
func (_ETGate *ETGateCallerSession) IsValidator(addr common.Address) (bool, error) {
	return _ETGate.Contract.IsValidator(&_ETGate.CallOpts, addr)
}

// LastWithdraw is a free data retrieval call binding the contract method 0xb52eea74.
//
// Solidity: function lastWithdraw() constant returns(uint256)
func (_ETGate *ETGateCaller) LastWithdraw(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _ETGate.contract.Call(opts, out, "lastWithdraw")
	return *ret0, err
}

// LastWithdraw is a free data retrieval call binding the contract method 0xb52eea74.
//
// Solidity: function lastWithdraw() constant returns(uint256)
func (_ETGate *ETGateSession) LastWithdraw() (*big.Int, error) {
	return _ETGate.Contract.LastWithdraw(&_ETGate.CallOpts)
}

// LastWithdraw is a free data retrieval call binding the contract method 0xb52eea74.
//
// Solidity: function lastWithdraw() constant returns(uint256)
func (_ETGate *ETGateCallerSession) LastWithdraw() (*big.Int, error) {
	return _ETGate.Contract.LastWithdraw(&_ETGate.CallOpts)
}

// NewEthAddr is a free data retrieval call binding the contract method 0x61e586fa.
//
// Solidity: function newEthAddr(pubkey bytes) constant returns(address)
func (_ETGate *ETGateCaller) NewEthAddr(opts *bind.CallOpts, pubkey []byte) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _ETGate.contract.Call(opts, out, "newEthAddr", pubkey)
	return *ret0, err
}

// NewEthAddr is a free data retrieval call binding the contract method 0x61e586fa.
//
// Solidity: function newEthAddr(pubkey bytes) constant returns(address)
func (_ETGate *ETGateSession) NewEthAddr(pubkey []byte) (common.Address, error) {
	return _ETGate.Contract.NewEthAddr(&_ETGate.CallOpts, pubkey)
}

// NewEthAddr is a free data retrieval call binding the contract method 0x61e586fa.
//
// Solidity: function newEthAddr(pubkey bytes) constant returns(address)
func (_ETGate *ETGateCallerSession) NewEthAddr(pubkey []byte) (common.Address, error) {
	return _ETGate.Contract.NewEthAddr(&_ETGate.CallOpts, pubkey)
}

// SenderIsValidator is a free data retrieval call binding the contract method 0xf6d07f89.
//
// Solidity: function senderIsValidator() constant returns(bool)
func (_ETGate *ETGateCaller) SenderIsValidator(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _ETGate.contract.Call(opts, out, "senderIsValidator")
	return *ret0, err
}

// SenderIsValidator is a free data retrieval call binding the contract method 0xf6d07f89.
//
// Solidity: function senderIsValidator() constant returns(bool)
func (_ETGate *ETGateSession) SenderIsValidator() (bool, error) {
	return _ETGate.Contract.SenderIsValidator(&_ETGate.CallOpts)
}

// SenderIsValidator is a free data retrieval call binding the contract method 0xf6d07f89.
//
// Solidity: function senderIsValidator() constant returns(bool)
func (_ETGate *ETGateCallerSession) SenderIsValidator() (bool, error) {
	return _ETGate.Contract.SenderIsValidator(&_ETGate.CallOpts)
}

// ToBytes is a free data retrieval call binding the contract method 0x593b79fe.
//
// Solidity: function toBytes(a address) constant returns(b bytes)
func (_ETGate *ETGateCaller) ToBytes(opts *bind.CallOpts, a common.Address) ([]byte, error) {
	var (
		ret0 = new([]byte)
	)
	out := ret0
	err := _ETGate.contract.Call(opts, out, "toBytes", a)
	return *ret0, err
}

// ToBytes is a free data retrieval call binding the contract method 0x593b79fe.
//
// Solidity: function toBytes(a address) constant returns(b bytes)
func (_ETGate *ETGateSession) ToBytes(a common.Address) ([]byte, error) {
	return _ETGate.Contract.ToBytes(&_ETGate.CallOpts, a)
}

// ToBytes is a free data retrieval call binding the contract method 0x593b79fe.
//
// Solidity: function toBytes(a address) constant returns(b bytes)
func (_ETGate *ETGateCallerSession) ToBytes(a common.Address) ([]byte, error) {
	return _ETGate.Contract.ToBytes(&_ETGate.CallOpts, a)
}

// ToKey is a free data retrieval call binding the contract method 0x0c44ec81.
//
// Solidity: function toKey(chain bytes, seq bytes) constant returns(bytes)
func (_ETGate *ETGateCaller) ToKey(opts *bind.CallOpts, chain []byte, seq []byte) ([]byte, error) {
	var (
		ret0 = new([]byte)
	)
	out := ret0
	err := _ETGate.contract.Call(opts, out, "toKey", chain, seq)
	return *ret0, err
}

// ToKey is a free data retrieval call binding the contract method 0x0c44ec81.
//
// Solidity: function toKey(chain bytes, seq bytes) constant returns(bytes)
func (_ETGate *ETGateSession) ToKey(chain []byte, seq []byte) ([]byte, error) {
	return _ETGate.Contract.ToKey(&_ETGate.CallOpts, chain, seq)
}

// ToKey is a free data retrieval call binding the contract method 0x0c44ec81.
//
// Solidity: function toKey(chain bytes, seq bytes) constant returns(bytes)
func (_ETGate *ETGateCallerSession) ToKey(chain []byte, seq []byte) ([]byte, error) {
	return _ETGate.Contract.ToKey(&_ETGate.CallOpts, chain, seq)
}

// Withdrawable is a free data retrieval call binding the contract method 0x2b07f190.
//
// Solidity: function withdrawable(height uint256, to address, value uint64, token address, chain bytes, seq uint256) constant returns(bool)
func (_ETGate *ETGateCaller) Withdrawable(opts *bind.CallOpts, height *big.Int, to common.Address, value uint64, token common.Address, chain []byte, seq *big.Int) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _ETGate.contract.Call(opts, out, "withdrawable", height, to, value, token, chain, seq)
	return *ret0, err
}

// Withdrawable is a free data retrieval call binding the contract method 0x2b07f190.
//
// Solidity: function withdrawable(height uint256, to address, value uint64, token address, chain bytes, seq uint256) constant returns(bool)
func (_ETGate *ETGateSession) Withdrawable(height *big.Int, to common.Address, value uint64, token common.Address, chain []byte, seq *big.Int) (bool, error) {
	return _ETGate.Contract.Withdrawable(&_ETGate.CallOpts, height, to, value, token, chain, seq)
}

// Withdrawable is a free data retrieval call binding the contract method 0x2b07f190.
//
// Solidity: function withdrawable(height uint256, to address, value uint64, token address, chain bytes, seq uint256) constant returns(bool)
func (_ETGate *ETGateCallerSession) Withdrawable(height *big.Int, to common.Address, value uint64, token common.Address, chain []byte, seq *big.Int) (bool, error) {
	return _ETGate.Contract.Withdrawable(&_ETGate.CallOpts, height, to, value, token, chain, seq)
}

// Deposit is a paid mutator transaction binding the contract method 0x9039bb4f.
//
// Solidity: function deposit(to address, value uint64, token address, chain bytes) returns()
func (_ETGate *ETGateTransactor) Deposit(opts *bind.TransactOpts, to common.Address, value uint64, token common.Address, chain []byte) (*types.Transaction, error) {
	return _ETGate.contract.Transact(opts, "deposit", to, value, token, chain)
}

// Deposit is a paid mutator transaction binding the contract method 0x9039bb4f.
//
// Solidity: function deposit(to address, value uint64, token address, chain bytes) returns()
func (_ETGate *ETGateSession) Deposit(to common.Address, value uint64, token common.Address, chain []byte) (*types.Transaction, error) {
	return _ETGate.Contract.Deposit(&_ETGate.TransactOpts, to, value, token, chain)
}

// Deposit is a paid mutator transaction binding the contract method 0x9039bb4f.
//
// Solidity: function deposit(to address, value uint64, token address, chain bytes) returns()
func (_ETGate *ETGateTransactorSession) Deposit(to common.Address, value uint64, token common.Address, chain []byte) (*types.Transaction, error) {
	return _ETGate.Contract.Deposit(&_ETGate.TransactOpts, to, value, token, chain)
}

// DepositEther is a paid mutator transaction binding the contract method 0x5f39fba3.
//
// Solidity: function depositEther(to address, value uint64, chain bytes) returns()
func (_ETGate *ETGateTransactor) DepositEther(opts *bind.TransactOpts, to common.Address, value uint64, chain []byte) (*types.Transaction, error) {
	return _ETGate.contract.Transact(opts, "depositEther", to, value, chain)
}

// DepositEther is a paid mutator transaction binding the contract method 0x5f39fba3.
//
// Solidity: function depositEther(to address, value uint64, chain bytes) returns()
func (_ETGate *ETGateSession) DepositEther(to common.Address, value uint64, chain []byte) (*types.Transaction, error) {
	return _ETGate.Contract.DepositEther(&_ETGate.TransactOpts, to, value, chain)
}

// DepositEther is a paid mutator transaction binding the contract method 0x5f39fba3.
//
// Solidity: function depositEther(to address, value uint64, chain bytes) returns()
func (_ETGate *ETGateTransactorSession) DepositEther(to common.Address, value uint64, chain []byte) (*types.Transaction, error) {
	return _ETGate.Contract.DepositEther(&_ETGate.TransactOpts, to, value, chain)
}

// ToVal is a paid mutator transaction binding the contract method 0xe2c229ea.
//
// Solidity: function toVal(to address, value uint64, token address) returns(bytes)
func (_ETGate *ETGateTransactor) ToVal(opts *bind.TransactOpts, to common.Address, value uint64, token common.Address) (*types.Transaction, error) {
	return _ETGate.contract.Transact(opts, "toVal", to, value, token)
}

// ToVal is a paid mutator transaction binding the contract method 0xe2c229ea.
//
// Solidity: function toVal(to address, value uint64, token address) returns(bytes)
func (_ETGate *ETGateSession) ToVal(to common.Address, value uint64, token common.Address) (*types.Transaction, error) {
	return _ETGate.Contract.ToVal(&_ETGate.TransactOpts, to, value, token)
}

// ToVal is a paid mutator transaction binding the contract method 0xe2c229ea.
//
// Solidity: function toVal(to address, value uint64, token address) returns(bytes)
func (_ETGate *ETGateTransactorSession) ToVal(to common.Address, value uint64, token common.Address) (*types.Transaction, error) {
	return _ETGate.Contract.ToVal(&_ETGate.TransactOpts, to, value, token)
}

// Update is a paid mutator transaction binding the contract method 0x43c4d499.
//
// Solidity: function update(_chainID string, _height uint256, _timeHash bytes20, _numTxs uint256, _blockIDHash bytes20, _blockIDPartSetHeaderTotal uint256, _blockIDPartSetHeaderHash bytes20, _lastCommitHash bytes20, _dataHash bytes20, _validatorsHash bytes20, _appHash bytes20) returns()
func (_ETGate *ETGateTransactor) Update(opts *bind.TransactOpts, _chainID string, _height *big.Int, _timeHash [20]byte, _numTxs *big.Int, _blockIDHash [20]byte, _blockIDPartSetHeaderTotal *big.Int, _blockIDPartSetHeaderHash [20]byte, _lastCommitHash [20]byte, _dataHash [20]byte, _validatorsHash [20]byte, _appHash [20]byte) (*types.Transaction, error) {
	return _ETGate.contract.Transact(opts, "update", _chainID, _height, _timeHash, _numTxs, _blockIDHash, _blockIDPartSetHeaderTotal, _blockIDPartSetHeaderHash, _lastCommitHash, _dataHash, _validatorsHash, _appHash)
}

// Update is a paid mutator transaction binding the contract method 0x43c4d499.
//
// Solidity: function update(_chainID string, _height uint256, _timeHash bytes20, _numTxs uint256, _blockIDHash bytes20, _blockIDPartSetHeaderTotal uint256, _blockIDPartSetHeaderHash bytes20, _lastCommitHash bytes20, _dataHash bytes20, _validatorsHash bytes20, _appHash bytes20) returns()
func (_ETGate *ETGateSession) Update(_chainID string, _height *big.Int, _timeHash [20]byte, _numTxs *big.Int, _blockIDHash [20]byte, _blockIDPartSetHeaderTotal *big.Int, _blockIDPartSetHeaderHash [20]byte, _lastCommitHash [20]byte, _dataHash [20]byte, _validatorsHash [20]byte, _appHash [20]byte) (*types.Transaction, error) {
	return _ETGate.Contract.Update(&_ETGate.TransactOpts, _chainID, _height, _timeHash, _numTxs, _blockIDHash, _blockIDPartSetHeaderTotal, _blockIDPartSetHeaderHash, _lastCommitHash, _dataHash, _validatorsHash, _appHash)
}

// Update is a paid mutator transaction binding the contract method 0x43c4d499.
//
// Solidity: function update(_chainID string, _height uint256, _timeHash bytes20, _numTxs uint256, _blockIDHash bytes20, _blockIDPartSetHeaderTotal uint256, _blockIDPartSetHeaderHash bytes20, _lastCommitHash bytes20, _dataHash bytes20, _validatorsHash bytes20, _appHash bytes20) returns()
func (_ETGate *ETGateTransactorSession) Update(_chainID string, _height *big.Int, _timeHash [20]byte, _numTxs *big.Int, _blockIDHash [20]byte, _blockIDPartSetHeaderTotal *big.Int, _blockIDPartSetHeaderHash [20]byte, _lastCommitHash [20]byte, _dataHash [20]byte, _validatorsHash [20]byte, _appHash [20]byte) (*types.Transaction, error) {
	return _ETGate.Contract.Update(&_ETGate.TransactOpts, _chainID, _height, _timeHash, _numTxs, _blockIDHash, _blockIDPartSetHeaderTotal, _blockIDPartSetHeaderHash, _lastCommitHash, _dataHash, _validatorsHash, _appHash)
}

// VerifyRaw is a paid mutator transaction binding the contract method 0x01bfd99c.
//
// Solidity: function verifyRaw(iavlProofLeafHash bytes20, iavlProofInnerHeight int8[], iavlProofInnerSize int256[], iavlProofInnerLeft bytes20[], iavlProofInnerRight bytes20[], iavlProofRootHash bytes20, key bytes, value bytes, root bytes20) returns()
func (_ETGate *ETGateTransactor) VerifyRaw(opts *bind.TransactOpts, iavlProofLeafHash [20]byte, iavlProofInnerHeight []int8, iavlProofInnerSize []*big.Int, iavlProofInnerLeft [][20]byte, iavlProofInnerRight [][20]byte, iavlProofRootHash [20]byte, key []byte, value []byte, root [20]byte) (*types.Transaction, error) {
	return _ETGate.contract.Transact(opts, "verifyRaw", iavlProofLeafHash, iavlProofInnerHeight, iavlProofInnerSize, iavlProofInnerLeft, iavlProofInnerRight, iavlProofRootHash, key, value, root)
}

// VerifyRaw is a paid mutator transaction binding the contract method 0x01bfd99c.
//
// Solidity: function verifyRaw(iavlProofLeafHash bytes20, iavlProofInnerHeight int8[], iavlProofInnerSize int256[], iavlProofInnerLeft bytes20[], iavlProofInnerRight bytes20[], iavlProofRootHash bytes20, key bytes, value bytes, root bytes20) returns()
func (_ETGate *ETGateSession) VerifyRaw(iavlProofLeafHash [20]byte, iavlProofInnerHeight []int8, iavlProofInnerSize []*big.Int, iavlProofInnerLeft [][20]byte, iavlProofInnerRight [][20]byte, iavlProofRootHash [20]byte, key []byte, value []byte, root [20]byte) (*types.Transaction, error) {
	return _ETGate.Contract.VerifyRaw(&_ETGate.TransactOpts, iavlProofLeafHash, iavlProofInnerHeight, iavlProofInnerSize, iavlProofInnerLeft, iavlProofInnerRight, iavlProofRootHash, key, value, root)
}

// VerifyRaw is a paid mutator transaction binding the contract method 0x01bfd99c.
//
// Solidity: function verifyRaw(iavlProofLeafHash bytes20, iavlProofInnerHeight int8[], iavlProofInnerSize int256[], iavlProofInnerLeft bytes20[], iavlProofInnerRight bytes20[], iavlProofRootHash bytes20, key bytes, value bytes, root bytes20) returns()
func (_ETGate *ETGateTransactorSession) VerifyRaw(iavlProofLeafHash [20]byte, iavlProofInnerHeight []int8, iavlProofInnerSize []*big.Int, iavlProofInnerLeft [][20]byte, iavlProofInnerRight [][20]byte, iavlProofRootHash [20]byte, key []byte, value []byte, root [20]byte) (*types.Transaction, error) {
	return _ETGate.Contract.VerifyRaw(&_ETGate.TransactOpts, iavlProofLeafHash, iavlProofInnerHeight, iavlProofInnerSize, iavlProofInnerLeft, iavlProofInnerRight, iavlProofRootHash, key, value, root)
}

// Withdraw is a paid mutator transaction binding the contract method 0xfe4fa2bb.
//
// Solidity: function withdraw(height uint256, to address, value uint64, token address, chain bytes, seq uint256) returns()
func (_ETGate *ETGateTransactor) Withdraw(opts *bind.TransactOpts, height *big.Int, to common.Address, value uint64, token common.Address, chain []byte, seq *big.Int) (*types.Transaction, error) {
	return _ETGate.contract.Transact(opts, "withdraw", height, to, value, token, chain, seq)
}

// Withdraw is a paid mutator transaction binding the contract method 0xfe4fa2bb.
//
// Solidity: function withdraw(height uint256, to address, value uint64, token address, chain bytes, seq uint256) returns()
func (_ETGate *ETGateSession) Withdraw(height *big.Int, to common.Address, value uint64, token common.Address, chain []byte, seq *big.Int) (*types.Transaction, error) {
	return _ETGate.Contract.Withdraw(&_ETGate.TransactOpts, height, to, value, token, chain, seq)
}

// Withdraw is a paid mutator transaction binding the contract method 0xfe4fa2bb.
//
// Solidity: function withdraw(height uint256, to address, value uint64, token address, chain bytes, seq uint256) returns()
func (_ETGate *ETGateTransactorSession) Withdraw(height *big.Int, to common.Address, value uint64, token common.Address, chain []byte, seq *big.Int) (*types.Transaction, error) {
	return _ETGate.Contract.Withdraw(&_ETGate.TransactOpts, height, to, value, token, chain, seq)
}

// WriteUvarint is a paid mutator transaction binding the contract method 0xd852de9a.
//
// Solidity: function writeUvarint(i uint64) returns(bytes)
func (_ETGate *ETGateTransactor) WriteUvarint(opts *bind.TransactOpts, i uint64) (*types.Transaction, error) {
	return _ETGate.contract.Transact(opts, "writeUvarint", i)
}

// WriteUvarint is a paid mutator transaction binding the contract method 0xd852de9a.
//
// Solidity: function writeUvarint(i uint64) returns(bytes)
func (_ETGate *ETGateSession) WriteUvarint(i uint64) (*types.Transaction, error) {
	return _ETGate.Contract.WriteUvarint(&_ETGate.TransactOpts, i)
}

// WriteUvarint is a paid mutator transaction binding the contract method 0xd852de9a.
//
// Solidity: function writeUvarint(i uint64) returns(bytes)
func (_ETGate *ETGateTransactorSession) WriteUvarint(i uint64) (*types.Transaction, error) {
	return _ETGate.Contract.WriteUvarint(&_ETGate.TransactOpts, i)
}
